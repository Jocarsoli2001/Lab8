

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 06 21:31:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  02AB                     __pidataBANK0:
   217                           
   218                           ;initializer for _disp_selector
   219  02AB  3401               	retlw	1
   220  000B                     _INTCONbits	set	11
   221  0001                     _TMR0	set	1
   222  0009                     _PORTE	set	9
   223  0008                     _PORTD	set	8
   224  0005                     _PORTA	set	5
   225  0007                     _PORTC	set	7
   226  001E                     _ADRESH	set	30
   227  001F                     _ADCON0bits	set	31
   228  000C                     _PIR1bits	set	12
   229  005A                     _T0IF	set	90
   230  008C                     _PIE1bits	set	140
   231  009F                     _ADCON1bits	set	159
   232  0081                     _OPTION_REGbits	set	129
   233  008F                     _OSCCONbits	set	143
   234  0089                     _TRISE	set	137
   235  0088                     _TRISD	set	136
   236  0087                     _TRISC	set	135
   237  0085                     _TRISA	set	133
   238  0189                     _ANSELH	set	393
   239  0188                     _ANSEL	set	392
   240                           
   241                           	psect	cinit
   242  0015                     start_initialization:	
   243                           ; #config settings
   244                           
   245  0015                     __initialization:
   246                           
   247                           ; Initialize objects allocated to BANK0
   248  0015  120A  118A  22AB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   249  001A  00BA               	movwf	__pdataBANK0& (0+127)
   250                           
   251                           ; Clear objects allocated to BANK0
   252  001B  1383               	bcf	3,7	;select IRP bank0
   253  001C  3020               	movlw	low __pbssBANK0
   254  001D  0084               	movwf	4
   255  001E  3032               	movlw	low (__pbssBANK0+18)
   256  001F  120A  118A  229D  120A  118A  	fcall	clear_ram0
   257  0024                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260  0024                     __end_of__initialization:
   261  0024  0183               	clrf	3
   262  0025  120A  118A  2A73   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265  0020                     __pbssBANK0:
   266  0020                     _dig:
   267  0020                     	ds	6
   268  0026                     _cen:
   269  0026                     	ds	2
   270  0028                     _dece:
   271  0028                     	ds	2
   272  002A                     _uni:
   273  002A                     	ds	2
   274  002C                     _digi:
   275  002C                     	ds	2
   276  002E                     _cont_vol:
   277  002E                     	ds	2
   278  0030                     _cont2:
   279  0030                     	ds	2
   280                           
   281                           	psect	dataBANK0
   282  003A                     __pdataBANK0:
   283  003A                     _disp_selector:
   284  003A                     	ds	1
   285                           
   286                           	psect	clrtext
   287  029D                     clear_ram0:	
   288                           ;	Called with FSR containing the base address, and
   289                           ;	W with the last address+1
   290                           
   291  029D  0064               	clrwdt	;clear the watchdog before getting into this loop
   292  029E                     clrloop0:
   293  029E  0180               	clrf	0	;clear RAM location pointed to by FSR
   294  029F  0A84               	incf	4,f	;increment pointer
   295  02A0  0604               	xorwf	4,w	;XOR with final address
   296  02A1  1903               	btfsc	3,2	;have we reached the end yet?
   297  02A2  3400               	retlw	0	;all done for this memory range, return
   298  02A3  0604               	xorwf	4,w	;XOR again to restore value
   299  02A4  2A9E               	goto	clrloop0	;do the next byte
   300                           
   301                           	psect	cstackCOMMON
   302  0070                     __pcstackCOMMON:
   303  0070                     ?_divisor:
   304  0070                     ?_tmr0:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ??_tmr0:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_displays:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_setup:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_isr:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_main:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_tabla:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?___awdiv:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0070                     ?___awmod:	
   329                           ; 2 bytes @ 0x0
   330                           
   331  0070                     tabla@a:	
   332                           ; 2 bytes @ 0x0
   333                           
   334  0070                     ___awdiv@divisor:	
   335                           ; 2 bytes @ 0x0
   336                           
   337  0070                     ___awmod@divisor:	
   338                           ; 2 bytes @ 0x0
   339                           
   340                           
   341                           ; 2 bytes @ 0x0
   342  0070                     	ds	2
   343  0072                     ??_displays:
   344  0072                     ??_tabla:	
   345                           ; 1 bytes @ 0x2
   346                           
   347  0072                     ___awdiv@dividend:	
   348                           ; 1 bytes @ 0x2
   349                           
   350  0072                     ___awmod@dividend:	
   351                           ; 2 bytes @ 0x2
   352                           
   353                           
   354                           ; 2 bytes @ 0x2
   355  0072                     	ds	2
   356  0074                     ??___awdiv:
   357  0074                     ??___awmod:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 1 bytes @ 0x4
   362  0074                     	ds	1
   363  0075                     ___awdiv@counter:
   364  0075                     ___awmod@counter:	
   365                           ; 1 bytes @ 0x5
   366                           
   367                           
   368                           ; 1 bytes @ 0x5
   369  0075                     	ds	1
   370  0076                     ___awdiv@sign:
   371  0076                     ___awmod@sign:	
   372                           ; 1 bytes @ 0x6
   373                           
   374                           
   375                           ; 1 bytes @ 0x6
   376  0076                     	ds	1
   377  0077                     ___awdiv@quotient:
   378                           
   379                           ; 2 bytes @ 0x7
   380  0077                     	ds	2
   381  0079                     ??_divisor:
   382                           
   383                           ; 1 bytes @ 0x9
   384  0079                     	ds	3
   385  007C                     divisor@i:
   386                           
   387                           ; 2 bytes @ 0xC
   388  007C                     	ds	2
   389                           
   390                           	psect	cstackBANK0
   391  0032                     __pcstackBANK0:
   392  0032                     ??_isr:
   393                           
   394                           ; 1 bytes @ 0x0
   395  0032                     	ds	6
   396  0038                     ??_setup:
   397                           
   398                           ; 1 bytes @ 0x6
   399  0038                     	ds	1
   400  0039                     ??_main:
   401                           
   402                           ; 1 bytes @ 0x7
   403  0039                     	ds	1
   404                           
   405                           	psect	maintext
   406  0273                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 82 in file "LAB8.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      void 
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : B00/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       1       0       0       0
   429 ;;      Totals:         0       1       0       0       0
   430 ;;Total ram usage:        1 bytes
   431 ;; Hardware stack levels required when called: 4
   432 ;; This function calls:
   433 ;;		_setup
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           
   440                           ;psect for function _main
   441  0273                     _main:
   442  0273                     l1288:	
   443                           ;incstack = 0
   444                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   445                           
   446                           
   447                           ;LAB8.c: 83:     setup();
   448  0273  120A  118A  21F3  120A  118A  	fcall	_setup
   449  0278                     l1290:
   450                           
   451                           ;LAB8.c: 84:     ADCON0bits.GO = 1;
   452  0278  1283               	bcf	3,5	;RP0=0, select bank0
   453  0279  1303               	bcf	3,6	;RP1=0, select bank0
   454  027A  149F               	bsf	31,1	;volatile
   455  027B                     l1292:
   456                           
   457                           ;LAB8.c: 86:         if(ADCON0bits.GO == 0){
   458  027B  189F               	btfsc	31,1	;volatile
   459  027C  2A7E               	goto	u551
   460  027D  2A7F               	goto	u550
   461  027E                     u551:
   462  027E  2A7B               	goto	l1292
   463  027F                     u550:
   464  027F                     l1294:
   465                           
   466                           ;LAB8.c: 87:             if(ADCON0bits.CHS == 1){
   467  027F  0C1F               	rrf	31,w	;volatile
   468  0280  00B9               	movwf	??_main
   469  0281  0C39               	rrf	??_main,w
   470  0282  390F               	andlw	15
   471  0283  3A01               	xorlw	1
   472  0284  1D03               	skipz
   473  0285  2A87               	goto	u561
   474  0286  2A88               	goto	u560
   475  0287                     u561:
   476  0287  2A8B               	goto	l1298
   477  0288                     u560:
   478  0288                     l1296:
   479                           
   480                           ;LAB8.c: 88:                 ADCON0bits.CHS = 0;
   481  0288  30C3               	movlw	-61
   482  0289  059F               	andwf	31,f	;volatile
   483                           
   484                           ;LAB8.c: 89:             }
   485  028A  2A8F               	goto	l1300
   486  028B                     l1298:
   487                           
   488                           ;LAB8.c: 91:                 ADCON0bits.CHS = 1;
   489  028B  081F               	movf	31,w	;volatile
   490  028C  39C3               	andlw	-61
   491  028D  3804               	iorlw	4
   492  028E  009F               	movwf	31	;volatile
   493  028F                     l1300:
   494                           
   495                           ;LAB8.c: 93:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   496  028F  300F               	movlw	15
   497  0290  1283               	bcf	3,5	;RP0=0, select bank0
   498  0291  1303               	bcf	3,6	;RP1=0, select bank0
   499  0292  00B9               	movwf	??_main
   500  0293                     u577:
   501  0293  0BB9               	decfsz	??_main,f
   502  0294  2A93               	goto	u577
   503  0295  2A96               	nop2
   504  0296                     l1302:
   505                           
   506                           ;LAB8.c: 94:             ADCON0bits.GO = 1;
   507  0296  1283               	bcf	3,5	;RP0=0, select bank0
   508  0297  1303               	bcf	3,6	;RP1=0, select bank0
   509  0298  149F               	bsf	31,1	;volatile
   510  0299  2A7B               	goto	l1292
   511  029A  120A  118A  2812   	ljmp	start
   512  029D                     __end_of_main:
   513                           
   514                           	psect	text1
   515  01F3                     __ptext1:	
   516 ;; *************** function _setup *****************
   517 ;; Defined at:
   518 ;;		line 100 in file "LAB8.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, status,2, status,0
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   532 ;;      Params:         0       0       0       0       0
   533 ;;      Locals:         0       0       0       0       0
   534 ;;      Temps:          0       1       0       0       0
   535 ;;      Totals:         0       1       0       0       0
   536 ;;Total ram usage:        1 bytes
   537 ;; Hardware stack levels used: 1
   538 ;; Hardware stack levels required when called: 3
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           
   547                           ;psect for function _setup
   548  01F3                     _setup:
   549  01F3                     l1218:	
   550                           ;incstack = 0
   551                           ; Regs used in _setup: [wreg+status,2+status,0]
   552                           
   553                           
   554                           ;LAB8.c: 103:     ANSEL = 0b00000011;
   555  01F3  3003               	movlw	3
   556  01F4  1683               	bsf	3,5	;RP0=1, select bank3
   557  01F5  1703               	bsf	3,6	;RP1=1, select bank3
   558  01F6  0088               	movwf	8	;volatile
   559  01F7                     l1220:
   560                           
   561                           ;LAB8.c: 104:     ANSELH = 0;
   562  01F7  0189               	clrf	9	;volatile
   563  01F8                     l1222:
   564                           
   565                           ;LAB8.c: 106:     TRISA = 0b00000011;
   566  01F8  3003               	movlw	3
   567  01F9  1683               	bsf	3,5	;RP0=1, select bank1
   568  01FA  1303               	bcf	3,6	;RP1=0, select bank1
   569  01FB  0085               	movwf	5	;volatile
   570                           
   571                           ;LAB8.c: 107:     TRISC = 0;
   572  01FC  0187               	clrf	7	;volatile
   573                           
   574                           ;LAB8.c: 108:     TRISD = 0;
   575  01FD  0188               	clrf	8	;volatile
   576                           
   577                           ;LAB8.c: 109:     TRISE = 0;
   578  01FE  0189               	clrf	9	;volatile
   579                           
   580                           ;LAB8.c: 111:     PORTA = 0;
   581  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   582  0200  1303               	bcf	3,6	;RP1=0, select bank0
   583  0201  0185               	clrf	5	;volatile
   584                           
   585                           ;LAB8.c: 112:     PORTD = 0;
   586  0202  0188               	clrf	8	;volatile
   587                           
   588                           ;LAB8.c: 113:     PORTC = 0;
   589  0203  0187               	clrf	7	;volatile
   590                           
   591                           ;LAB8.c: 114:     PORTE = 0;
   592  0204  0189               	clrf	9	;volatile
   593  0205                     l1224:
   594                           
   595                           ;LAB8.c: 117:     OSCCONbits.IRCF = 0b0110;
   596  0205  1683               	bsf	3,5	;RP0=1, select bank1
   597  0206  1303               	bcf	3,6	;RP1=0, select bank1
   598  0207  080F               	movf	15,w	;volatile
   599  0208  398F               	andlw	-113
   600  0209  3860               	iorlw	96
   601  020A  008F               	movwf	15	;volatile
   602  020B                     l1226:
   603                           
   604                           ;LAB8.c: 118:     OSCCONbits.SCS = 1;
   605  020B  140F               	bsf	15,0	;volatile
   606  020C                     l1228:
   607                           
   608                           ;LAB8.c: 121:     OPTION_REGbits.T0CS = 0;
   609  020C  1281               	bcf	1,5	;volatile
   610  020D                     l1230:
   611                           
   612                           ;LAB8.c: 122:     OPTION_REGbits.T0SE = 0;
   613  020D  1201               	bcf	1,4	;volatile
   614  020E                     l1232:
   615                           
   616                           ;LAB8.c: 123:     OPTION_REGbits.PSA = 0;
   617  020E  1181               	bcf	1,3	;volatile
   618  020F                     l1234:
   619                           
   620                           ;LAB8.c: 124:     OPTION_REGbits.PS2 = 1;
   621  020F  1501               	bsf	1,2	;volatile
   622  0210                     l1236:
   623                           
   624                           ;LAB8.c: 125:     OPTION_REGbits.PS1 = 1;
   625  0210  1481               	bsf	1,1	;volatile
   626  0211                     l1238:
   627                           
   628                           ;LAB8.c: 126:     OPTION_REGbits.PS0 = 1;
   629  0211  1401               	bsf	1,0	;volatile
   630  0212                     l1240:
   631                           
   632                           ;LAB8.c: 127:     TMR0 = 237;
   633  0212  30ED               	movlw	237
   634  0213  1283               	bcf	3,5	;RP0=0, select bank0
   635  0214  1303               	bcf	3,6	;RP1=0, select bank0
   636  0215  0081               	movwf	1	;volatile
   637  0216                     l1242:
   638                           
   639                           ;LAB8.c: 130:     ADCON1bits.ADFM = 0;
   640  0216  1683               	bsf	3,5	;RP0=1, select bank1
   641  0217  1303               	bcf	3,6	;RP1=0, select bank1
   642  0218  139F               	bcf	31,7	;volatile
   643  0219                     l1244:
   644                           
   645                           ;LAB8.c: 131:     ADCON1bits.VCFG0 = 0;
   646  0219  121F               	bcf	31,4	;volatile
   647  021A                     l1246:
   648                           
   649                           ;LAB8.c: 132:     ADCON1bits.VCFG1 = 0;
   650  021A  129F               	bcf	31,5	;volatile
   651  021B                     l1248:
   652                           
   653                           ;LAB8.c: 134:     ADCON0bits.ADCS = 0b01;
   654  021B  1283               	bcf	3,5	;RP0=0, select bank0
   655  021C  1303               	bcf	3,6	;RP1=0, select bank0
   656  021D  081F               	movf	31,w	;volatile
   657  021E  393F               	andlw	-193
   658  021F  3840               	iorlw	64
   659  0220  009F               	movwf	31	;volatile
   660  0221                     l1250:
   661                           
   662                           ;LAB8.c: 135:     ADCON0bits.CHS = 0;
   663  0221  30C3               	movlw	-61
   664  0222  059F               	andwf	31,f	;volatile
   665  0223                     l1252:
   666                           
   667                           ;LAB8.c: 136:     ADCON0bits.ADON = 1;
   668  0223  141F               	bsf	31,0	;volatile
   669  0224                     l1254:
   670                           
   671                           ;LAB8.c: 137:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   672  0224  300F               	movlw	15
   673  0225  1283               	bcf	3,5	;RP0=0, select bank0
   674  0226  1303               	bcf	3,6	;RP1=0, select bank0
   675  0227  00B8               	movwf	??_setup
   676  0228                     u587:
   677  0228  0BB8               	decfsz	??_setup,f
   678  0229  2A28               	goto	u587
   679  022A  2A2B               	nop2
   680  022B                     l1256:
   681                           
   682                           ;LAB8.c: 140:     INTCONbits.T0IF = 0;
   683  022B  110B               	bcf	11,2	;volatile
   684  022C                     l1258:
   685                           
   686                           ;LAB8.c: 141:     INTCONbits.T0IE = 1;
   687  022C  168B               	bsf	11,5	;volatile
   688  022D                     l1260:
   689                           
   690                           ;LAB8.c: 142:     INTCONbits.GIE = 1;
   691  022D  178B               	bsf	11,7	;volatile
   692  022E                     l1262:
   693                           
   694                           ;LAB8.c: 143:     PIR1bits.ADIF = 0;
   695  022E  1283               	bcf	3,5	;RP0=0, select bank0
   696  022F  1303               	bcf	3,6	;RP1=0, select bank0
   697  0230  130C               	bcf	12,6	;volatile
   698  0231                     l1264:
   699                           
   700                           ;LAB8.c: 144:     PIE1bits.ADIE = 1;
   701  0231  1683               	bsf	3,5	;RP0=1, select bank1
   702  0232  1303               	bcf	3,6	;RP1=0, select bank1
   703  0233  170C               	bsf	12,6	;volatile
   704  0234                     l1266:
   705                           
   706                           ;LAB8.c: 145:     INTCONbits.PEIE = 1;
   707  0234  170B               	bsf	11,6	;volatile
   708  0235                     l91:
   709  0235  0008               	return
   710  0236                     __end_of_setup:
   711                           
   712                           	psect	text2
   713  0236                     __ptext2:	
   714 ;; *************** function _isr *****************
   715 ;; Defined at:
   716 ;;		line 63 in file "LAB8.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0
   732 ;;      Temps:          0       6       0       0       0
   733 ;;      Totals:         0       6       0       0       0
   734 ;;Total ram usage:        6 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 2
   737 ;; This function calls:
   738 ;;		_displays
   739 ;;		_divisor
   740 ;;		_tmr0
   741 ;; This function is called by:
   742 ;;		Interrupt level 1
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           
   747                           ;psect for function _isr
   748  0236                     _isr:
   749  0236                     i1l1270:
   750                           
   751                           ;LAB8.c: 64:     if(PIR1bits.ADIF){
   752  0236  1F0C               	btfss	12,6	;volatile
   753  0237  2A39               	goto	u52_21
   754  0238  2A3A               	goto	u52_20
   755  0239                     u52_21:
   756  0239  2A58               	goto	i1l1282
   757  023A                     u52_20:
   758  023A                     i1l1272:
   759                           
   760                           ;LAB8.c: 65:         if(ADCON0bits.CHS == 1){
   761  023A  0C1F               	rrf	31,w	;volatile
   762  023B  00B2               	movwf	??_isr
   763  023C  0C32               	rrf	??_isr,w
   764  023D  390F               	andlw	15
   765  023E  3A01               	xorlw	1
   766  023F  1D03               	skipz
   767  0240  2A42               	goto	u53_21
   768  0241  2A43               	goto	u53_20
   769  0242                     u53_21:
   770  0242  2A50               	goto	i1l1276
   771  0243                     u53_20:
   772  0243                     i1l1274:
   773                           
   774                           ;LAB8.c: 66:             cont2 = ADRESH;
   775  0243  081E               	movf	30,w	;volatile
   776  0244  00B2               	movwf	??_isr
   777  0245  01B3               	clrf	??_isr+1
   778  0246  0832               	movf	??_isr,w
   779  0247  00B0               	movwf	_cont2
   780  0248  0833               	movf	??_isr+1,w
   781  0249  00B1               	movwf	_cont2+1
   782                           
   783                           ;LAB8.c: 67:             cont_vol = cont2*2;
   784  024A  1003               	clrc
   785  024B  0D30               	rlf	_cont2,w
   786  024C  00AE               	movwf	_cont_vol
   787  024D  0D31               	rlf	_cont2+1,w
   788  024E  00AF               	movwf	_cont_vol+1
   789                           
   790                           ;LAB8.c: 68:         }
   791  024F  2A52               	goto	i1l1278
   792  0250                     i1l1276:
   793                           
   794                           ;LAB8.c: 70:             PORTC = ADRESH;
   795  0250  081E               	movf	30,w	;volatile
   796  0251  0087               	movwf	7	;volatile
   797  0252                     i1l1278:
   798                           
   799                           ;LAB8.c: 72:         PIR1bits.ADIF = 0;
   800  0252  130C               	bcf	12,6	;volatile
   801  0253                     i1l1280:
   802                           
   803                           ;LAB8.c: 73:         divisor();
   804  0253  120A  118A  208F  120A  118A  	fcall	_divisor
   805  0258                     i1l1282:
   806                           
   807                           ;LAB8.c: 75:     if(T0IF){
   808  0258  1D0B               	btfss	11,2	;volatile
   809  0259  2A5B               	goto	u54_21
   810  025A  2A5C               	goto	u54_20
   811  025B                     u54_21:
   812  025B  2A66               	goto	i1l77
   813  025C                     u54_20:
   814  025C                     i1l1284:
   815                           
   816                           ;LAB8.c: 76:         tmr0();
   817  025C  120A  118A  22A5  120A  118A  	fcall	_tmr0
   818  0261                     i1l1286:
   819                           
   820                           ;LAB8.c: 77:         displays();
   821  0261  120A  118A  21AA  120A  118A  	fcall	_displays
   822  0266                     i1l77:
   823  0266  1283               	bcf	3,5	;RP0=0, select bank0
   824  0267  1303               	bcf	3,6	;RP1=0, select bank0
   825  0268  0837               	movf	??_isr+5,w
   826  0269  00FF               	movwf	btemp+1
   827  026A  0836               	movf	??_isr+4,w
   828  026B  008A               	movwf	10
   829  026C  0835               	movf	??_isr+3,w
   830  026D  0084               	movwf	4
   831  026E  0E34               	swapf	??_isr+2,w
   832  026F  0083               	movwf	3
   833  0270  0EFE               	swapf	btemp,f
   834  0271  0E7E               	swapf	btemp,w
   835  0272  0009               	retfie
   836  0273                     __end_of_isr:
   837                           
   838                           	psect	intentry
   839  0004                     __pintentry:	
   840                           ;incstack = 0
   841                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   842                           
   843  0004                     interrupt_function:
   844  007E                     saved_w	set	btemp
   845  0004  00FE               	movwf	btemp
   846  0005  0E03               	swapf	3,w
   847  0006  1283               	bcf	3,5	;RP0=0, select bank0
   848  0007  1303               	bcf	3,6	;RP1=0, select bank0
   849  0008  00B4               	movwf	??_isr+2
   850  0009  0804               	movf	4,w
   851  000A  00B5               	movwf	??_isr+3
   852  000B  080A               	movf	10,w
   853  000C  00B6               	movwf	??_isr+4
   854  000D  087F               	movf	btemp+1,w
   855  000E  00B7               	movwf	??_isr+5
   856  000F  120A  118A  2A36   	ljmp	_isr
   857                           
   858                           	psect	text3
   859  02A5                     __ptext3:	
   860 ;; *************** function _tmr0 *****************
   861 ;; Defined at:
   862 ;;		line 150 in file "LAB8.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   876 ;;      Params:         0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0
   879 ;;      Totals:         0       0       0       0       0
   880 ;;Total ram usage:        0 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_isr
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           
   890                           ;psect for function _tmr0
   891  02A5                     _tmr0:
   892  02A5                     i1l1192:	
   893                           ;incstack = 0
   894                           ; Regs used in _tmr0: [wreg]
   895                           
   896                           
   897                           ;LAB8.c: 151:     INTCONbits.T0IF = 0;
   898  02A5  110B               	bcf	11,2	;volatile
   899  02A6                     i1l1194:
   900                           
   901                           ;LAB8.c: 152:     TMR0 = 237;
   902  02A6  30ED               	movlw	237
   903  02A7  1283               	bcf	3,5	;RP0=0, select bank0
   904  02A8  1303               	bcf	3,6	;RP1=0, select bank0
   905  02A9  0081               	movwf	1	;volatile
   906  02AA                     i1l94:
   907  02AA  0008               	return
   908  02AB                     __end_of_tmr0:
   909                           
   910                           	psect	text4
   911  008F                     __ptext4:	
   912 ;; *************** function _divisor *****************
   913 ;; Defined at:
   914 ;;		line 156 in file "LAB8.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;		None
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  i               2   12[COMMON] int 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         2       0       0       0       0
   930 ;;      Temps:          3       0       0       0       0
   931 ;;      Totals:         5       0       0       0       0
   932 ;;Total ram usage:        5 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; Hardware stack levels required when called: 1
   935 ;; This function calls:
   936 ;;		___awdiv
   937 ;;		___awmod
   938 ;; This function is called by:
   939 ;;		_isr
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           
   944                           ;psect for function _divisor
   945  008F                     _divisor:
   946  008F                     i1l1176:	
   947                           ;incstack = 0
   948                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   949                           
   950                           
   951                           ;LAB8.c: 157:     for(int i = 0; i<3 ; i++){
   952  008F  01FC               	clrf	divisor@i
   953  0090  01FD               	clrf	divisor@i+1
   954  0091                     i1l1182:
   955                           
   956                           ;LAB8.c: 158:         dig[i] = cont_vol % 10;
   957  0091  300A               	movlw	10
   958  0092  00F0               	movwf	___awmod@divisor
   959  0093  3000               	movlw	0
   960  0094  00F1               	movwf	___awmod@divisor+1
   961  0095  1283               	bcf	3,5	;RP0=0, select bank0
   962  0096  1303               	bcf	3,6	;RP1=0, select bank0
   963  0097  082F               	movf	_cont_vol+1,w
   964  0098  00F3               	movwf	___awmod@dividend+1
   965  0099  082E               	movf	_cont_vol,w
   966  009A  00F2               	movwf	___awmod@dividend
   967  009B  120A  118A  2151  120A  118A  	fcall	___awmod
   968  00A0  087C               	movf	divisor@i,w
   969  00A1  00F9               	movwf	??_divisor
   970  00A2  0779               	addwf	??_divisor,w
   971  00A3  3E20               	addlw	(low (_dig| 0))& (0+255)
   972  00A4  0084               	movwf	4
   973  00A5  0870               	movf	?___awmod,w
   974  00A6  1383               	bcf	3,7	;select IRP bank0
   975  00A7  0080               	movwf	0
   976  00A8  0A84               	incf	4,f
   977  00A9  0871               	movf	?___awmod+1,w
   978  00AA  0080               	movwf	0
   979                           
   980                           ;LAB8.c: 159:         cont_vol = (cont_vol - dig[i])/10;
   981  00AB  300A               	movlw	10
   982  00AC  00F0               	movwf	___awdiv@divisor
   983  00AD  3000               	movlw	0
   984  00AE  00F1               	movwf	___awdiv@divisor+1
   985  00AF  087C               	movf	divisor@i,w
   986  00B0  00F9               	movwf	??_divisor
   987  00B1  0779               	addwf	??_divisor,w
   988  00B2  3E20               	addlw	(low (_dig| 0))& (0+255)
   989  00B3  0084               	movwf	4
   990  00B4  0800               	movf	0,w
   991  00B5  00FA               	movwf	??_divisor+1
   992  00B6  0A84               	incf	4,f
   993  00B7  0800               	movf	0,w
   994  00B8  00FB               	movwf	??_divisor+2
   995  00B9  087A               	movf	??_divisor+1,w
   996  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   997  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   998  00BC  022E               	subwf	_cont_vol,w
   999  00BD  00F2               	movwf	___awdiv@dividend
  1000  00BE  087B               	movf	??_divisor+2,w
  1001  00BF  1C03               	skipc
  1002  00C0  0A7B               	incf	??_divisor+2,w
  1003  00C1  022F               	subwf	_cont_vol+1,w
  1004  00C2  00F3               	movwf	___awdiv@dividend+1
  1005  00C3  120A  118A  2028  120A  118A  	fcall	___awdiv
  1006  00C8  0871               	movf	?___awdiv+1,w
  1007  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1008  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1009  00CB  00AF               	movwf	_cont_vol+1
  1010  00CC  0870               	movf	?___awdiv,w
  1011  00CD  00AE               	movwf	_cont_vol
  1012  00CE                     i1l1184:
  1013                           
  1014                           ;LAB8.c: 160:     }
  1015  00CE  3001               	movlw	1
  1016  00CF  07FC               	addwf	divisor@i,f
  1017  00D0  1803               	skipnc
  1018  00D1  0AFD               	incf	divisor@i+1,f
  1019  00D2  3000               	movlw	0
  1020  00D3  07FD               	addwf	divisor@i+1,f
  1021  00D4                     i1l1186:
  1022  00D4  087D               	movf	divisor@i+1,w
  1023  00D5  3A80               	xorlw	128
  1024  00D6  00FF               	movwf	btemp+1
  1025  00D7  3080               	movlw	128
  1026  00D8  027F               	subwf	btemp+1,w
  1027  00D9  1D03               	skipz
  1028  00DA  28DD               	goto	u48_25
  1029  00DB  3003               	movlw	3
  1030  00DC  027C               	subwf	divisor@i,w
  1031  00DD                     u48_25:
  1032  00DD  1C03               	skipc
  1033  00DE  28E0               	goto	u48_21
  1034  00DF  28E1               	goto	u48_20
  1035  00E0                     u48_21:
  1036  00E0  2891               	goto	i1l1182
  1037  00E1                     u48_20:
  1038  00E1                     i1l1188:
  1039                           
  1040                           ;LAB8.c: 161:     dig[0] = uni;
  1041  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1042  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1043  00E3  082B               	movf	_uni+1,w
  1044  00E4  00A1               	movwf	_dig+1
  1045  00E5  082A               	movf	_uni,w
  1046  00E6  00A0               	movwf	_dig
  1047                           
  1048                           ;LAB8.c: 162:     dig[1] = dece;
  1049  00E7  0829               	movf	_dece+1,w
  1050  00E8  00A3               	movwf	_dig+3
  1051  00E9  0828               	movf	_dece,w
  1052  00EA  00A2               	movwf	_dig+2
  1053                           
  1054                           ;LAB8.c: 163:     dig[2] = cen;
  1055  00EB  0827               	movf	_cen+1,w
  1056  00EC  00A5               	movwf	_dig+5
  1057  00ED  0826               	movf	_cen,w
  1058  00EE  00A4               	movwf	_dig+4
  1059  00EF                     i1l99:
  1060  00EF  0008               	return
  1061  00F0                     __end_of_divisor:
  1062                           
  1063                           	psect	text5
  1064  0151                     __ptext5:	
  1065 ;; *************** function ___awmod *****************
  1066 ;; Defined at:
  1067 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  divisor         2    0[COMMON] int 
  1070 ;;  dividend        2    2[COMMON] int 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  sign            1    6[COMMON] unsigned char 
  1073 ;;  counter         1    5[COMMON] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  2    0[COMMON] int 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         4       0       0       0       0
  1084 ;;      Locals:         2       0       0       0       0
  1085 ;;      Temps:          1       0       0       0       0
  1086 ;;      Totals:         7       0       0       0       0
  1087 ;;Total ram usage:        7 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_divisor
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function ___awmod
  1098  0151                     ___awmod:
  1099  0151                     i1l1138:	
  1100                           ;incstack = 0
  1101                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1102                           
  1103  0151  01F6               	clrf	___awmod@sign
  1104  0152                     i1l1140:
  1105  0152  1FF3               	btfss	___awmod@dividend+1,7
  1106  0153  2955               	goto	u39_21
  1107  0154  2956               	goto	u39_20
  1108  0155                     u39_21:
  1109  0155  295D               	goto	i1l1146
  1110  0156                     u39_20:
  1111  0156                     i1l1142:
  1112  0156  09F2               	comf	___awmod@dividend,f
  1113  0157  09F3               	comf	___awmod@dividend+1,f
  1114  0158  0AF2               	incf	___awmod@dividend,f
  1115  0159  1903               	skipnz
  1116  015A  0AF3               	incf	___awmod@dividend+1,f
  1117  015B                     i1l1144:
  1118  015B  01F6               	clrf	___awmod@sign
  1119  015C  0AF6               	incf	___awmod@sign,f
  1120  015D                     i1l1146:
  1121  015D  1FF1               	btfss	___awmod@divisor+1,7
  1122  015E  2960               	goto	u40_21
  1123  015F  2961               	goto	u40_20
  1124  0160                     u40_21:
  1125  0160  2966               	goto	i1l1150
  1126  0161                     u40_20:
  1127  0161                     i1l1148:
  1128  0161  09F0               	comf	___awmod@divisor,f
  1129  0162  09F1               	comf	___awmod@divisor+1,f
  1130  0163  0AF0               	incf	___awmod@divisor,f
  1131  0164  1903               	skipnz
  1132  0165  0AF1               	incf	___awmod@divisor+1,f
  1133  0166                     i1l1150:
  1134  0166  0870               	movf	___awmod@divisor,w
  1135  0167  0471               	iorwf	___awmod@divisor+1,w
  1136  0168  1903               	btfsc	3,2
  1137  0169  296B               	goto	u41_21
  1138  016A  296C               	goto	u41_20
  1139  016B                     u41_21:
  1140  016B  299B               	goto	i1l1168
  1141  016C                     u41_20:
  1142  016C                     i1l1152:
  1143  016C  01F5               	clrf	___awmod@counter
  1144  016D  0AF5               	incf	___awmod@counter,f
  1145  016E  297A               	goto	i1l1158
  1146  016F                     i1l1154:
  1147  016F  3001               	movlw	1
  1148  0170                     u42_25:
  1149  0170  1003               	clrc
  1150  0171  0DF0               	rlf	___awmod@divisor,f
  1151  0172  0DF1               	rlf	___awmod@divisor+1,f
  1152  0173  3EFF               	addlw	-1
  1153  0174  1D03               	skipz
  1154  0175  2970               	goto	u42_25
  1155  0176                     i1l1156:
  1156  0176  3001               	movlw	1
  1157  0177  00F4               	movwf	??___awmod
  1158  0178  0874               	movf	??___awmod,w
  1159  0179  07F5               	addwf	___awmod@counter,f
  1160  017A                     i1l1158:
  1161  017A  1FF1               	btfss	___awmod@divisor+1,7
  1162  017B  297D               	goto	u43_21
  1163  017C  297E               	goto	u43_20
  1164  017D                     u43_21:
  1165  017D  296F               	goto	i1l1154
  1166  017E                     u43_20:
  1167  017E                     i1l1160:
  1168  017E  0871               	movf	___awmod@divisor+1,w
  1169  017F  0273               	subwf	___awmod@dividend+1,w
  1170  0180  1D03               	skipz
  1171  0181  2984               	goto	u44_25
  1172  0182  0870               	movf	___awmod@divisor,w
  1173  0183  0272               	subwf	___awmod@dividend,w
  1174  0184                     u44_25:
  1175  0184  1C03               	skipc
  1176  0185  2987               	goto	u44_21
  1177  0186  2988               	goto	u44_20
  1178  0187                     u44_21:
  1179  0187  298E               	goto	i1l1164
  1180  0188                     u44_20:
  1181  0188                     i1l1162:
  1182  0188  0870               	movf	___awmod@divisor,w
  1183  0189  02F2               	subwf	___awmod@dividend,f
  1184  018A  0871               	movf	___awmod@divisor+1,w
  1185  018B  1C03               	skipc
  1186  018C  03F3               	decf	___awmod@dividend+1,f
  1187  018D  02F3               	subwf	___awmod@dividend+1,f
  1188  018E                     i1l1164:
  1189  018E  3001               	movlw	1
  1190  018F                     u45_25:
  1191  018F  1003               	clrc
  1192  0190  0CF1               	rrf	___awmod@divisor+1,f
  1193  0191  0CF0               	rrf	___awmod@divisor,f
  1194  0192  3EFF               	addlw	-1
  1195  0193  1D03               	skipz
  1196  0194  298F               	goto	u45_25
  1197  0195                     i1l1166:
  1198  0195  3001               	movlw	1
  1199  0196  02F5               	subwf	___awmod@counter,f
  1200  0197  1D03               	btfss	3,2
  1201  0198  299A               	goto	u46_21
  1202  0199  299B               	goto	u46_20
  1203  019A                     u46_21:
  1204  019A  297E               	goto	i1l1160
  1205  019B                     u46_20:
  1206  019B                     i1l1168:
  1207  019B  0876               	movf	___awmod@sign,w
  1208  019C  1903               	btfsc	3,2
  1209  019D  299F               	goto	u47_21
  1210  019E  29A0               	goto	u47_20
  1211  019F                     u47_21:
  1212  019F  29A5               	goto	i1l1172
  1213  01A0                     u47_20:
  1214  01A0                     i1l1170:
  1215  01A0  09F2               	comf	___awmod@dividend,f
  1216  01A1  09F3               	comf	___awmod@dividend+1,f
  1217  01A2  0AF2               	incf	___awmod@dividend,f
  1218  01A3  1903               	skipnz
  1219  01A4  0AF3               	incf	___awmod@dividend+1,f
  1220  01A5                     i1l1172:
  1221  01A5  0873               	movf	___awmod@dividend+1,w
  1222  01A6  00F1               	movwf	?___awmod+1
  1223  01A7  0872               	movf	___awmod@dividend,w
  1224  01A8  00F0               	movwf	?___awmod
  1225  01A9                     i1l376:
  1226  01A9  0008               	return
  1227  01AA                     __end_of___awmod:
  1228                           
  1229                           	psect	text6
  1230  0028                     __ptext6:	
  1231 ;; *************** function ___awdiv *****************
  1232 ;; Defined at:
  1233 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  divisor         2    0[COMMON] int 
  1236 ;;  dividend        2    2[COMMON] int 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  quotient        2    7[COMMON] int 
  1239 ;;  sign            1    6[COMMON] unsigned char 
  1240 ;;  counter         1    5[COMMON] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  2    0[COMMON] int 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         4       0       0       0       0
  1251 ;;      Locals:         4       0       0       0       0
  1252 ;;      Temps:          1       0       0       0       0
  1253 ;;      Totals:         9       0       0       0       0
  1254 ;;Total ram usage:        9 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_divisor
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function ___awdiv
  1265  0028                     ___awdiv:
  1266  0028                     i1l1094:	
  1267                           ;incstack = 0
  1268                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1269                           
  1270  0028  01F6               	clrf	___awdiv@sign
  1271  0029                     i1l1096:
  1272  0029  1FF1               	btfss	___awdiv@divisor+1,7
  1273  002A  282C               	goto	u29_21
  1274  002B  282D               	goto	u29_20
  1275  002C                     u29_21:
  1276  002C  2834               	goto	i1l1102
  1277  002D                     u29_20:
  1278  002D                     i1l1098:
  1279  002D  09F0               	comf	___awdiv@divisor,f
  1280  002E  09F1               	comf	___awdiv@divisor+1,f
  1281  002F  0AF0               	incf	___awdiv@divisor,f
  1282  0030  1903               	skipnz
  1283  0031  0AF1               	incf	___awdiv@divisor+1,f
  1284  0032                     i1l1100:
  1285  0032  01F6               	clrf	___awdiv@sign
  1286  0033  0AF6               	incf	___awdiv@sign,f
  1287  0034                     i1l1102:
  1288  0034  1FF3               	btfss	___awdiv@dividend+1,7
  1289  0035  2837               	goto	u30_21
  1290  0036  2838               	goto	u30_20
  1291  0037                     u30_21:
  1292  0037  2841               	goto	i1l1108
  1293  0038                     u30_20:
  1294  0038                     i1l1104:
  1295  0038  09F2               	comf	___awdiv@dividend,f
  1296  0039  09F3               	comf	___awdiv@dividend+1,f
  1297  003A  0AF2               	incf	___awdiv@dividend,f
  1298  003B  1903               	skipnz
  1299  003C  0AF3               	incf	___awdiv@dividend+1,f
  1300  003D                     i1l1106:
  1301  003D  3001               	movlw	1
  1302  003E  00F4               	movwf	??___awdiv
  1303  003F  0874               	movf	??___awdiv,w
  1304  0040  06F6               	xorwf	___awdiv@sign,f
  1305  0041                     i1l1108:
  1306  0041  01F7               	clrf	___awdiv@quotient
  1307  0042  01F8               	clrf	___awdiv@quotient+1
  1308  0043                     i1l1110:
  1309  0043  0870               	movf	___awdiv@divisor,w
  1310  0044  0471               	iorwf	___awdiv@divisor+1,w
  1311  0045  1903               	btfsc	3,2
  1312  0046  2848               	goto	u31_21
  1313  0047  2849               	goto	u31_20
  1314  0048                     u31_21:
  1315  0048  2880               	goto	i1l1130
  1316  0049                     u31_20:
  1317  0049                     i1l1112:
  1318  0049  01F5               	clrf	___awdiv@counter
  1319  004A  0AF5               	incf	___awdiv@counter,f
  1320  004B  2857               	goto	i1l1118
  1321  004C                     i1l1114:
  1322  004C  3001               	movlw	1
  1323  004D                     u32_25:
  1324  004D  1003               	clrc
  1325  004E  0DF0               	rlf	___awdiv@divisor,f
  1326  004F  0DF1               	rlf	___awdiv@divisor+1,f
  1327  0050  3EFF               	addlw	-1
  1328  0051  1D03               	skipz
  1329  0052  284D               	goto	u32_25
  1330  0053                     i1l1116:
  1331  0053  3001               	movlw	1
  1332  0054  00F4               	movwf	??___awdiv
  1333  0055  0874               	movf	??___awdiv,w
  1334  0056  07F5               	addwf	___awdiv@counter,f
  1335  0057                     i1l1118:
  1336  0057  1FF1               	btfss	___awdiv@divisor+1,7
  1337  0058  285A               	goto	u33_21
  1338  0059  285B               	goto	u33_20
  1339  005A                     u33_21:
  1340  005A  284C               	goto	i1l1114
  1341  005B                     u33_20:
  1342  005B                     i1l1120:
  1343  005B  3001               	movlw	1
  1344  005C                     u34_25:
  1345  005C  1003               	clrc
  1346  005D  0DF7               	rlf	___awdiv@quotient,f
  1347  005E  0DF8               	rlf	___awdiv@quotient+1,f
  1348  005F  3EFF               	addlw	-1
  1349  0060  1D03               	skipz
  1350  0061  285C               	goto	u34_25
  1351  0062  0871               	movf	___awdiv@divisor+1,w
  1352  0063  0273               	subwf	___awdiv@dividend+1,w
  1353  0064  1D03               	skipz
  1354  0065  2868               	goto	u35_25
  1355  0066  0870               	movf	___awdiv@divisor,w
  1356  0067  0272               	subwf	___awdiv@dividend,w
  1357  0068                     u35_25:
  1358  0068  1C03               	skipc
  1359  0069  286B               	goto	u35_21
  1360  006A  286C               	goto	u35_20
  1361  006B                     u35_21:
  1362  006B  2873               	goto	i1l1126
  1363  006C                     u35_20:
  1364  006C                     i1l1122:
  1365  006C  0870               	movf	___awdiv@divisor,w
  1366  006D  02F2               	subwf	___awdiv@dividend,f
  1367  006E  0871               	movf	___awdiv@divisor+1,w
  1368  006F  1C03               	skipc
  1369  0070  03F3               	decf	___awdiv@dividend+1,f
  1370  0071  02F3               	subwf	___awdiv@dividend+1,f
  1371  0072                     i1l1124:
  1372  0072  1477               	bsf	___awdiv@quotient,0
  1373  0073                     i1l1126:
  1374  0073  3001               	movlw	1
  1375  0074                     u36_25:
  1376  0074  1003               	clrc
  1377  0075  0CF1               	rrf	___awdiv@divisor+1,f
  1378  0076  0CF0               	rrf	___awdiv@divisor,f
  1379  0077  3EFF               	addlw	-1
  1380  0078  1D03               	skipz
  1381  0079  2874               	goto	u36_25
  1382  007A                     i1l1128:
  1383  007A  3001               	movlw	1
  1384  007B  02F5               	subwf	___awdiv@counter,f
  1385  007C  1D03               	btfss	3,2
  1386  007D  287F               	goto	u37_21
  1387  007E  2880               	goto	u37_20
  1388  007F                     u37_21:
  1389  007F  285B               	goto	i1l1120
  1390  0080                     u37_20:
  1391  0080                     i1l1130:
  1392  0080  0876               	movf	___awdiv@sign,w
  1393  0081  1903               	btfsc	3,2
  1394  0082  2884               	goto	u38_21
  1395  0083  2885               	goto	u38_20
  1396  0084                     u38_21:
  1397  0084  288A               	goto	i1l1134
  1398  0085                     u38_20:
  1399  0085                     i1l1132:
  1400  0085  09F7               	comf	___awdiv@quotient,f
  1401  0086  09F8               	comf	___awdiv@quotient+1,f
  1402  0087  0AF7               	incf	___awdiv@quotient,f
  1403  0088  1903               	skipnz
  1404  0089  0AF8               	incf	___awdiv@quotient+1,f
  1405  008A                     i1l1134:
  1406  008A  0878               	movf	___awdiv@quotient+1,w
  1407  008B  00F1               	movwf	?___awdiv+1
  1408  008C  0877               	movf	___awdiv@quotient,w
  1409  008D  00F0               	movwf	?___awdiv
  1410  008E                     i1l363:
  1411  008E  0008               	return
  1412  008F                     __end_of___awdiv:
  1413                           
  1414                           	psect	text7
  1415  01AA                     __ptext7:	
  1416 ;; *************** function _displays *****************
  1417 ;; Defined at:
  1418 ;;		line 167 in file "LAB8.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0
  1434 ;;      Temps:          1       0       0       0       0
  1435 ;;      Totals:         1       0       0       0       0
  1436 ;;Total ram usage:        1 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 1
  1439 ;; This function calls:
  1440 ;;		_tabla
  1441 ;; This function is called by:
  1442 ;;		_isr
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _displays
  1448  01AA                     _displays:
  1449  01AA                     i1l1198:	
  1450                           ;incstack = 0
  1451                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1452                           
  1453                           
  1454                           ;LAB8.c: 168:     PORTE = disp_selector;
  1455  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1456  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1457  01AC  083A               	movf	_disp_selector,w
  1458  01AD  0089               	movwf	9	;volatile
  1459  01AE                     i1l1200:
  1460                           
  1461                           ;LAB8.c: 169:     if(disp_selector == 0b001){
  1462  01AE  033A               	decf	_disp_selector,w
  1463  01AF  1D03               	btfss	3,2
  1464  01B0  29B2               	goto	u49_21
  1465  01B1  29B3               	goto	u49_20
  1466  01B2                     u49_21:
  1467  01B2  29C5               	goto	i1l1206
  1468  01B3                     u49_20:
  1469  01B3                     i1l1202:
  1470                           
  1471                           ;LAB8.c: 170:         PORTD = tabla(uni);
  1472  01B3  082B               	movf	_uni+1,w
  1473  01B4  00F1               	movwf	tabla@a+1
  1474  01B5  082A               	movf	_uni,w
  1475  01B6  00F0               	movwf	tabla@a
  1476  01B7  120A  118A  20F0  120A  118A  	fcall	_tabla
  1477  01BC  0870               	movf	?_tabla,w
  1478  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1479  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1480  01BF  0088               	movwf	8	;volatile
  1481  01C0                     i1l1204:
  1482                           
  1483                           ;LAB8.c: 171:         disp_selector = 0b010;
  1484  01C0  3002               	movlw	2
  1485  01C1  00F2               	movwf	??_displays
  1486  01C2  0872               	movf	??_displays,w
  1487  01C3  00BA               	movwf	_disp_selector
  1488                           
  1489                           ;LAB8.c: 172:     }
  1490  01C4  29F2               	goto	i1l107
  1491  01C5                     i1l1206:
  1492  01C5  3002               	movlw	2
  1493  01C6  063A               	xorwf	_disp_selector,w
  1494  01C7  1D03               	btfss	3,2
  1495  01C8  29CA               	goto	u50_21
  1496  01C9  29CB               	goto	u50_20
  1497  01CA                     u50_21:
  1498  01CA  29DD               	goto	i1l1212
  1499  01CB                     u50_20:
  1500  01CB                     i1l1208:
  1501                           
  1502                           ;LAB8.c: 174:         PORTD = tabla(dece);
  1503  01CB  0829               	movf	_dece+1,w
  1504  01CC  00F1               	movwf	tabla@a+1
  1505  01CD  0828               	movf	_dece,w
  1506  01CE  00F0               	movwf	tabla@a
  1507  01CF  120A  118A  20F0  120A  118A  	fcall	_tabla
  1508  01D4  0870               	movf	?_tabla,w
  1509  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1510  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1511  01D7  0088               	movwf	8	;volatile
  1512  01D8                     i1l1210:
  1513                           
  1514                           ;LAB8.c: 175:         disp_selector = 0b100;
  1515  01D8  3004               	movlw	4
  1516  01D9  00F2               	movwf	??_displays
  1517  01DA  0872               	movf	??_displays,w
  1518  01DB  00BA               	movwf	_disp_selector
  1519                           
  1520                           ;LAB8.c: 176:     }
  1521  01DC  29F2               	goto	i1l107
  1522  01DD                     i1l1212:
  1523  01DD  3004               	movlw	4
  1524  01DE  063A               	xorwf	_disp_selector,w
  1525  01DF  1D03               	btfss	3,2
  1526  01E0  29E2               	goto	u51_21
  1527  01E1  29E3               	goto	u51_20
  1528  01E2                     u51_21:
  1529  01E2  29F2               	goto	i1l107
  1530  01E3                     u51_20:
  1531  01E3                     i1l1214:
  1532                           
  1533                           ;LAB8.c: 178:         PORTD = tabla(cen);
  1534  01E3  0827               	movf	_cen+1,w
  1535  01E4  00F1               	movwf	tabla@a+1
  1536  01E5  0826               	movf	_cen,w
  1537  01E6  00F0               	movwf	tabla@a
  1538  01E7  120A  118A  20F0  120A  118A  	fcall	_tabla
  1539  01EC  0870               	movf	?_tabla,w
  1540  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1541  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1542  01EF  0088               	movwf	8	;volatile
  1543  01F0                     i1l1216:
  1544                           
  1545                           ;LAB8.c: 179:         disp_selector = 0b001;
  1546  01F0  01BA               	clrf	_disp_selector
  1547  01F1  0ABA               	incf	_disp_selector,f
  1548  01F2                     i1l107:
  1549  01F2  0008               	return
  1550  01F3                     __end_of_displays:
  1551                           
  1552                           	psect	text8
  1553  00F0                     __ptext8:	
  1554 ;; *************** function _tabla *****************
  1555 ;; Defined at:
  1556 ;;		line 183 in file "LAB8.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  a               2    0[COMMON] int 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  2    0[COMMON] int 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         2       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0
  1573 ;;      Totals:         2       0       0       0       0
  1574 ;;Total ram usage:        2 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_displays
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           
  1584                           ;psect for function _tabla
  1585  00F0                     _tabla:
  1586  00F0                     i1l1020:	
  1587                           ;incstack = 0
  1588                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1589                           
  1590                           
  1591                           ;LAB8.c: 184:     switch (a){
  1592  00F0  2928               	goto	i1l1088
  1593  00F1                     i1l1022:
  1594                           
  1595                           ;LAB8.c: 186:             return 0b00111111;
  1596  00F1  303F               	movlw	63
  1597  00F2  00F0               	movwf	?_tabla
  1598  00F3  3000               	movlw	0
  1599  00F4  00F1               	movwf	?_tabla+1
  1600  00F5  2950               	goto	i1l112
  1601  00F6                     i1l1028:
  1602                           
  1603                           ;LAB8.c: 189:             return 0b00000110;
  1604  00F6  3006               	movlw	6
  1605  00F7  00F0               	movwf	?_tabla
  1606  00F8  3000               	movlw	0
  1607  00F9  00F1               	movwf	?_tabla+1
  1608  00FA  2950               	goto	i1l112
  1609  00FB                     i1l1034:
  1610                           
  1611                           ;LAB8.c: 192:             return 0b01011011;
  1612  00FB  305B               	movlw	91
  1613  00FC  00F0               	movwf	?_tabla
  1614  00FD  3000               	movlw	0
  1615  00FE  00F1               	movwf	?_tabla+1
  1616  00FF  2950               	goto	i1l112
  1617  0100                     i1l1040:
  1618                           
  1619                           ;LAB8.c: 195:             return 0b01001111;
  1620  0100  304F               	movlw	79
  1621  0101  00F0               	movwf	?_tabla
  1622  0102  3000               	movlw	0
  1623  0103  00F1               	movwf	?_tabla+1
  1624  0104  2950               	goto	i1l112
  1625  0105                     i1l1046:
  1626                           
  1627                           ;LAB8.c: 198:             return 0b01100110;
  1628  0105  3066               	movlw	102
  1629  0106  00F0               	movwf	?_tabla
  1630  0107  3000               	movlw	0
  1631  0108  00F1               	movwf	?_tabla+1
  1632  0109  2950               	goto	i1l112
  1633  010A                     i1l1052:
  1634                           
  1635                           ;LAB8.c: 201:             return 0b01101101;
  1636  010A  306D               	movlw	109
  1637  010B  00F0               	movwf	?_tabla
  1638  010C  3000               	movlw	0
  1639  010D  00F1               	movwf	?_tabla+1
  1640  010E  2950               	goto	i1l112
  1641  010F                     i1l1058:
  1642                           
  1643                           ;LAB8.c: 204:             return 0b01111101;
  1644  010F  307D               	movlw	125
  1645  0110  00F0               	movwf	?_tabla
  1646  0111  3000               	movlw	0
  1647  0112  00F1               	movwf	?_tabla+1
  1648  0113  2950               	goto	i1l112
  1649  0114                     i1l1064:
  1650                           
  1651                           ;LAB8.c: 207:             return 0b00000111;
  1652  0114  3007               	movlw	7
  1653  0115  00F0               	movwf	?_tabla
  1654  0116  3000               	movlw	0
  1655  0117  00F1               	movwf	?_tabla+1
  1656  0118  2950               	goto	i1l112
  1657  0119                     i1l1070:
  1658                           
  1659                           ;LAB8.c: 210:             return 0b01111111;
  1660  0119  307F               	movlw	127
  1661  011A  00F0               	movwf	?_tabla
  1662  011B  3000               	movlw	0
  1663  011C  00F1               	movwf	?_tabla+1
  1664  011D  2950               	goto	i1l112
  1665  011E                     i1l1076:
  1666                           
  1667                           ;LAB8.c: 213:             return 0b01101111;
  1668  011E  306F               	movlw	111
  1669  011F  00F0               	movwf	?_tabla
  1670  0120  3000               	movlw	0
  1671  0121  00F1               	movwf	?_tabla+1
  1672  0122  2950               	goto	i1l112
  1673  0123                     i1l1082:
  1674                           
  1675                           ;LAB8.c: 216:             return 0b01111011;
  1676  0123  307B               	movlw	123
  1677  0124  00F0               	movwf	?_tabla
  1678  0125  3000               	movlw	0
  1679  0126  00F1               	movwf	?_tabla+1
  1680  0127  2950               	goto	i1l112
  1681  0128                     i1l1088:
  1682                           
  1683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1684                           ; Switch size 1, requested type "simple"
  1685                           ; Number of cases is 1, Range of values is 0 to 0
  1686                           ; switch strategies available:
  1687                           ; Name         Instructions Cycles
  1688                           ; simple_byte            4     3 (average)
  1689                           ; direct_byte           11     8 (fixed)
  1690                           ; jumptable            260     6 (fixed)
  1691                           ;	Chosen strategy is simple_byte
  1692  0128  0871               	movf	tabla@a+1,w
  1693  0129  3A00               	xorlw	0	; case 0
  1694  012A  1903               	skipnz
  1695  012B  292D               	goto	i1l1324
  1696  012C  2950               	goto	i1l112
  1697  012D                     i1l1324:
  1698                           
  1699                           ; Switch size 1, requested type "simple"
  1700                           ; Number of cases is 11, Range of values is 0 to 10
  1701                           ; switch strategies available:
  1702                           ; Name         Instructions Cycles
  1703                           ; simple_byte           34    18 (average)
  1704                           ; direct_byte           41     8 (fixed)
  1705                           ; jumptable            260     6 (fixed)
  1706                           ;	Chosen strategy is simple_byte
  1707  012D  0870               	movf	tabla@a,w
  1708  012E  3A00               	xorlw	0	; case 0
  1709  012F  1903               	skipnz
  1710  0130  28F1               	goto	i1l1022
  1711  0131  3A01               	xorlw	1	; case 1
  1712  0132  1903               	skipnz
  1713  0133  28F6               	goto	i1l1028
  1714  0134  3A03               	xorlw	3	; case 2
  1715  0135  1903               	skipnz
  1716  0136  28FB               	goto	i1l1034
  1717  0137  3A01               	xorlw	1	; case 3
  1718  0138  1903               	skipnz
  1719  0139  2900               	goto	i1l1040
  1720  013A  3A07               	xorlw	7	; case 4
  1721  013B  1903               	skipnz
  1722  013C  2905               	goto	i1l1046
  1723  013D  3A01               	xorlw	1	; case 5
  1724  013E  1903               	skipnz
  1725  013F  290A               	goto	i1l1052
  1726  0140  3A03               	xorlw	3	; case 6
  1727  0141  1903               	skipnz
  1728  0142  290F               	goto	i1l1058
  1729  0143  3A01               	xorlw	1	; case 7
  1730  0144  1903               	skipnz
  1731  0145  2914               	goto	i1l1064
  1732  0146  3A0F               	xorlw	15	; case 8
  1733  0147  1903               	skipnz
  1734  0148  2919               	goto	i1l1070
  1735  0149  3A01               	xorlw	1	; case 9
  1736  014A  1903               	skipnz
  1737  014B  291E               	goto	i1l1076
  1738  014C  3A03               	xorlw	3	; case 10
  1739  014D  1903               	skipnz
  1740  014E  2923               	goto	i1l1082
  1741  014F  2950               	goto	i1l112
  1742  0150                     i1l112:
  1743  0150  0008               	return
  1744  0151                     __end_of_tabla:
  1745  007E                     btemp	set	126	;btemp
  1746  007E                     wtemp0	set	126
  1747                           
  1748                           	psect	config
  1749                           
  1750                           ;Config register CONFIG1 @ 0x2007
  1751                           ;	Oscillator Selection bits
  1752                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1753                           ;	Watchdog Timer Enable bit
  1754                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1755                           ;	Power-up Timer Enable bit
  1756                           ;	PWRTE = OFF, PWRT disabled
  1757                           ;	RE3/MCLR pin function select bit
  1758                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1759                           ;	Code Protection bit
  1760                           ;	CP = OFF, Program memory code protection is disabled
  1761                           ;	Data Code Protection bit
  1762                           ;	CPD = OFF, Data memory code protection is disabled
  1763                           ;	Brown Out Reset Selection bits
  1764                           ;	BOREN = OFF, BOR disabled
  1765                           ;	Internal External Switchover bit
  1766                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1767                           ;	Fail-Safe Clock Monitor Enabled bit
  1768                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1769                           ;	Low Voltage Programming Enable bit
  1770                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1771                           ;	In-Circuit Debugger Mode bit
  1772                           ;	DEBUG = 0x1, unprogrammed default
  1773  2007                     	org	8199
  1774  2007  20D4               	dw	8404
  1775                           
  1776                           ;Config register CONFIG2 @ 0x2008
  1777                           ;	Brown-out Reset Selection bit
  1778                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1779                           ;	Flash Program Memory Self Write Enable bits
  1780                           ;	WRT = OFF, Write protection off
  1781  2008                     	org	8200
  1782  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_divisor
    _divisor->___awdiv
    _displays->_tabla

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1240
                                              0 BANK0      6     6      0
                           _displays
                            _divisor
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _divisor                                              5     5      0     990
                                              9 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     250
                                              2 COMMON     1     1      0
                              _tabla
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _displays
     _tabla
   _divisor
     ___awdiv
     ___awmod
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      1B       5       33.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      29      12        0.0%
ABS                  0      0      29       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 06 21:31:57 2021

                     l91 0235             ___awdiv@sign 0076                       fsr 0004  
                    u550 027F                      u551 027E                      u560 0288  
                    u561 0287                      u577 0293                      u587 0228  
                    _cen 0026                      _dig 0020                      _isr 0236  
                    fsr0 0004                      _uni 002A                      indf 0000  
           ___awmod@sign 0076                     l1220 01F7                     l1300 028F  
                   l1230 020D                     l1222 01F8                     l1302 0296  
                   l1240 0212                     l1232 020E                     l1224 0205  
                   l1250 0221                     l1242 0216                     l1234 020F  
                   l1226 020B                     l1218 01F3                     l1260 022D  
                   l1252 0223                     l1244 0219                     l1236 0210  
                   l1228 020C                     l1262 022E                     l1254 0224  
                   l1246 021A                     l1238 0211                     l1264 0231  
                   l1256 022B                     l1248 021B                     l1266 0234  
                   l1258 022C                     l1290 0278                     l1292 027B  
                   l1294 027F                     l1296 0288                     l1288 0273  
                   l1298 028B                     ?_isr 0070                     _T0IF 005A  
                   i1l77 0266                     i1l94 02AA                     i1l99 00EF  
                   _TMR0 0001                     _dece 0028                     _digi 002C  
                   _main 0273                     _tmr0 02A5                     btemp 007E  
                   start 0012                    ??_isr 0032                    ?_main 0070  
        __end_of___awdiv 008F                    ?_tmr0 0070          __end_of___awmod 01AA  
                  _ANSEL 0188          ___awdiv@divisor 0070                    i1l112 0150  
                  i1l107 01F2                    i1l363 008E                    i1l376 01A9  
        ___awdiv@counter 0075                    u30_20 0038                    u30_21 0037  
                  u31_20 0049                    u31_21 0048                    u40_20 0161  
                  u40_21 0160                    u32_25 004D                    u33_20 005B  
                  u41_20 016C                    u33_21 005A                    u41_21 016B  
                  u50_20 01CB                    u50_21 01CA                    u34_25 005C  
                  u42_25 0170                    u51_20 01E3                    u35_20 006C  
                  u43_20 017E                    u51_21 01E2                    u35_21 006B  
                  u43_21 017D                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    u35_25 0068                    _PORTE 0009  
                  u44_20 0188                    u52_20 023A                    u44_21 0187  
                  u52_21 0239                    u36_25 0074                    u44_25 0184  
                  u37_20 0080                    u29_20 002D                    u53_20 0243  
                  u37_21 007F                    u29_21 002C                    u53_21 0242  
                  u45_25 018F                    u38_20 0085                    u46_20 019B  
                  u54_20 025C                    u38_21 0084                    u46_21 019A  
                  u54_21 025B                    u47_20 01A0                    u39_20 0156  
                  u47_21 019F                    u39_21 0155                    u48_20 00E1  
                  u48_21 00E0                    u48_25 00DD                    u49_20 01B3  
                  u49_21 01B2                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089          __end_of_divisor 00F0  
                  _cont2 0030                    _tabla 00F0                    _setup 01F3  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 029D             __end_of_tmr0 02AB  
                 ??_main 0039                   ??_tmr0 0070                   ?_tabla 0070  
                 _ADRESH 001E         ___awdiv@dividend 0072                   ?_setup 0070  
                 _ANSELH 0189                   i1l1020 00F0                   i1l1100 0032  
                 i1l1022 00F1                   i1l1110 0043                   i1l1102 0034  
                 i1l1040 0100                   i1l1200 01AE                   i1l1120 005B  
                 i1l1112 0049                   i1l1104 0038                   i1l1034 00FB  
                 i1l1210 01D8                   i1l1202 01B3                   i1l1122 006C  
                 i1l1114 004C                   i1l1130 0080                   i1l1106 003D  
                 i1l1052 010A                   i1l1028 00F6                   i1l1212 01DD  
                 i1l1204 01C0                   i1l1132 0085                   i1l1124 0072  
                 i1l1116 0053                   i1l1108 0041                   i1l1140 0152  
                 i1l1070 0119                   i1l1046 0105                   i1l1214 01E3  
                 i1l1206 01C5                   i1l1134 008A                   i1l1126 0073  
                 i1l1118 0057                   i1l1150 0166                   i1l1142 0156  
                 i1l1064 0114                   i1l1216 01F0                   i1l1208 01CB  
                 i1l1128 007A                   i1l1160 017E                   i1l1152 016C  
                 i1l1144 015B                   i1l1082 0123                   i1l1058 010F  
                 i1l1170 01A0                   i1l1162 0188                   i1l1154 016F  
                 i1l1146 015D                   i1l1138 0151                   i1l1324 012D  
                 i1l1076 011E                   i1l1172 01A5                   i1l1164 018E  
                 i1l1156 0176                   i1l1148 0161                   i1l1094 0028  
                 i1l1166 0195                   i1l1158 017A                   i1l1182 0091  
                 i1l1270 0236                   i1l1088 0128                   i1l1096 0029  
                 i1l1168 019B                   i1l1184 00CE                   i1l1176 008F  
                 i1l1192 02A5                   i1l1280 0253                   i1l1272 023A  
                 i1l1098 002D                   i1l1186 00D4                   i1l1194 02A6  
                 i1l1274 0243                   i1l1282 0258                   i1l1188 00E1  
                 i1l1284 025C                   i1l1276 0250                   i1l1198 01AA  
                 i1l1286 0261                   i1l1278 0252         __end_of_displays 01F3  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0077  
        ___awmod@divisor 0070          ___awmod@counter 0075                ??_divisor 0079  
                 tabla@a 0070                   saved_w 007E  __end_of__initialization 0024  
         __pcstackCOMMON 0070             __pidataBANK0 02AB            __end_of_tabla 0151  
          __end_of_setup 0236           _OPTION_REGbits 0081                  ??_tabla 0072  
                ??_setup 0038               __pbssBANK0 0020               __pmaintext 0273  
             __pintentry 0004                ?_displays 0070                  ___awdiv 0028  
                ___awmod 0151                  __ptext1 01F3                  __ptext2 0236  
                __ptext3 02A5                  __ptext4 008F                  __ptext5 0151  
                __ptext6 0028                  __ptext7 01AA                  __ptext8 00F0  
                _divisor 008F             __size_of_isr 003D         ___awmod@dividend 0072  
                clrloop0 029E               ??_displays 0072     end_of_initialization 0024  
    start_initialization 0015              __end_of_isr 0273              __pdataBANK0 003A  
              ___latbits 0002            __pcstackBANK0 0032        __size_of_displays 0049  
               ?___awdiv 0070                 ?___awmod 0070                 ?_divisor 0070  
         __size_of_tabla 0061           __size_of_setup 0043        interrupt_function 0004  
              clear_ram0 029D                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of_divisor 0061                 _displays 01AA  
               _cont_vol 002E            __size_of_main 002A            __size_of_tmr0 0006  
               divisor@i 007C               _INTCONbits 000B                 intlevel1 0000  
             _OSCCONbits 008F            _disp_selector 003A  
