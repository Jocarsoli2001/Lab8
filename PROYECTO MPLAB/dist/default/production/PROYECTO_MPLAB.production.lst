

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Oct 07 07:10:54 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214                           
   215                           	psect	idataBANK0
   216  0300                     __pidataBANK0:
   217                           
   218                           ;initializer for _disp_selector
   219  0300  3401               	retlw	1
   220  000B                     _INTCONbits	set	11
   221  0001                     _TMR0	set	1
   222  0009                     _PORTE	set	9
   223  0008                     _PORTD	set	8
   224  0005                     _PORTA	set	5
   225  0007                     _PORTC	set	7
   226  001F                     _ADCON0bits	set	31
   227  000C                     _PIR1bits	set	12
   228  001E                     _ADRESH	set	30
   229  005A                     _T0IF	set	90
   230  008C                     _PIE1bits	set	140
   231  009F                     _ADCON1bits	set	159
   232  0081                     _OPTION_REGbits	set	129
   233  008F                     _OSCCONbits	set	143
   234  0089                     _TRISE	set	137
   235  0088                     _TRISD	set	136
   236  0087                     _TRISC	set	135
   237  0085                     _TRISA	set	133
   238  0189                     _ANSELH	set	393
   239  0188                     _ANSEL	set	392
   240                           
   241                           	psect	cinit
   242  0015                     start_initialization:	
   243                           ; #config settings
   244                           
   245  0015                     __initialization:
   246                           
   247                           ; Initialize objects allocated to BANK0
   248  0015  120A  118A  2300  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   249  001A  00B3               	movwf	__pdataBANK0& (0+127)
   250                           
   251                           ; Clear objects allocated to BANK0
   252  001B  01A0               	clrf	__pbssBANK0& (0+127)
   253  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   254  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   255  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   256  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   257  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   258  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   259  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   260  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   261  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   262  0025  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   263  0026                     end_of_initialization:	
   264                           ;End of C runtime variable initialization code
   265                           
   266  0026                     __end_of__initialization:
   267  0026  0183               	clrf	3
   268  0027  120A  118A  2AC8   	ljmp	_main	;jump to C main() function
   269                           
   270                           	psect	bssBANK0
   271  0020                     __pbssBANK0:
   272  0020                     _dig:
   273  0020                     	ds	6
   274  0026                     _cont_vol:
   275  0026                     	ds	2
   276  0028                     _cont2:
   277  0028                     	ds	2
   278  002A                     _digi:
   279  002A                     	ds	1
   280                           
   281                           	psect	dataBANK0
   282  0033                     __pdataBANK0:
   283  0033                     _disp_selector:
   284  0033                     	ds	1
   285                           
   286                           	psect	cstackCOMMON
   287  0070                     __pcstackCOMMON:
   288  0070                     ?_divisor:
   289  0070                     ?_tmr0:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ??_tmr0:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_displays:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_setup:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_isr:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_main:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_tabla:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ?_tabla_p:	
   311                           ; 2 bytes @ 0x0
   312                           
   313  0070                     ?___awdiv:	
   314                           ; 2 bytes @ 0x0
   315                           
   316  0070                     ?___awmod:	
   317                           ; 2 bytes @ 0x0
   318                           
   319  0070                     tabla@a:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     tabla_p@a:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ___awdiv@divisor:	
   326                           ; 2 bytes @ 0x0
   327                           
   328  0070                     ___awmod@divisor:	
   329                           ; 2 bytes @ 0x0
   330                           
   331                           
   332                           ; 2 bytes @ 0x0
   333  0070                     	ds	2
   334  0072                     ??_displays:
   335  0072                     ??_tabla:	
   336                           ; 1 bytes @ 0x2
   337                           
   338  0072                     ??_tabla_p:	
   339                           ; 1 bytes @ 0x2
   340                           
   341  0072                     ___awdiv@dividend:	
   342                           ; 1 bytes @ 0x2
   343                           
   344  0072                     ___awmod@dividend:	
   345                           ; 2 bytes @ 0x2
   346                           
   347                           
   348                           ; 2 bytes @ 0x2
   349  0072                     	ds	2
   350  0074                     ??___awdiv:
   351  0074                     ??___awmod:	
   352                           ; 1 bytes @ 0x4
   353                           
   354                           
   355                           ; 1 bytes @ 0x4
   356  0074                     	ds	1
   357  0075                     ___awdiv@counter:
   358  0075                     ___awmod@counter:	
   359                           ; 1 bytes @ 0x5
   360                           
   361                           
   362                           ; 1 bytes @ 0x5
   363  0075                     	ds	1
   364  0076                     ___awdiv@sign:
   365  0076                     ___awmod@sign:	
   366                           ; 1 bytes @ 0x6
   367                           
   368                           
   369                           ; 1 bytes @ 0x6
   370  0076                     	ds	1
   371  0077                     ___awdiv@quotient:
   372                           
   373                           ; 2 bytes @ 0x7
   374  0077                     	ds	2
   375  0079                     ??_divisor:
   376                           
   377                           ; 1 bytes @ 0x9
   378  0079                     	ds	3
   379  007C                     divisor@i:
   380                           
   381                           ; 2 bytes @ 0xC
   382  007C                     	ds	2
   383                           
   384                           	psect	cstackBANK0
   385  002B                     __pcstackBANK0:
   386  002B                     ??_isr:
   387                           
   388                           ; 1 bytes @ 0x0
   389  002B                     	ds	6
   390  0031                     ??_setup:
   391                           
   392                           ; 1 bytes @ 0x6
   393  0031                     	ds	1
   394  0032                     ??_main:
   395                           
   396                           ; 1 bytes @ 0x7
   397  0032                     	ds	1
   398                           
   399                           	psect	maintext
   400  02C8                     __pmaintext:	
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 78 in file "LAB8.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, status,2, status,0, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : B00/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       1       0       0       0
   423 ;;      Totals:         0       1       0       0       0
   424 ;;Total ram usage:        1 bytes
   425 ;; Hardware stack levels required when called: 4
   426 ;; This function calls:
   427 ;;		_setup
   428 ;; This function is called by:
   429 ;;		Startup code after reset
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           
   434                           ;psect for function _main
   435  02C8                     _main:
   436  02C8                     l1465:	
   437                           ;incstack = 0
   438                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   439                           
   440                           
   441                           ;LAB8.c: 79:     setup();
   442  02C8  120A  118A  2248  120A  118A  	fcall	_setup
   443  02CD                     l1467:
   444                           
   445                           ;LAB8.c: 80:     ADCON0bits.GO = 1;
   446  02CD  1283               	bcf	3,5	;RP0=0, select bank0
   447  02CE  1303               	bcf	3,6	;RP1=0, select bank0
   448  02CF  149F               	bsf	31,1	;volatile
   449  02D0                     l1469:
   450                           
   451                           ;LAB8.c: 82:         if(ADCON0bits.GO == 0){
   452  02D0  189F               	btfsc	31,1	;volatile
   453  02D1  2AD3               	goto	u551
   454  02D2  2AD4               	goto	u550
   455  02D3                     u551:
   456  02D3  2AD0               	goto	l1469
   457  02D4                     u550:
   458  02D4                     l1471:
   459                           
   460                           ;LAB8.c: 83:             if(ADCON0bits.CHS == 1){
   461  02D4  0C1F               	rrf	31,w	;volatile
   462  02D5  00B2               	movwf	??_main
   463  02D6  0C32               	rrf	??_main,w
   464  02D7  390F               	andlw	15
   465  02D8  3A01               	xorlw	1
   466  02D9  1D03               	skipz
   467  02DA  2ADC               	goto	u561
   468  02DB  2ADD               	goto	u560
   469  02DC                     u561:
   470  02DC  2AE7               	goto	l1477
   471  02DD                     u560:
   472  02DD                     l1473:
   473                           
   474                           ;LAB8.c: 84:                 ADCON0bits.CHS = 0;
   475  02DD  30C3               	movlw	-61
   476  02DE  059F               	andwf	31,f	;volatile
   477  02DF                     l1475:
   478                           
   479                           ;LAB8.c: 85:                 _delay((unsigned long)((50)*(4000000/4000000.0)));
   480  02DF  300F               	movlw	15
   481  02E0  1283               	bcf	3,5	;RP0=0, select bank0
   482  02E1  1303               	bcf	3,6	;RP1=0, select bank0
   483  02E2  00B2               	movwf	??_main
   484  02E3                     u577:
   485  02E3  0BB2               	decfsz	??_main,f
   486  02E4  2AE3               	goto	u577
   487  02E5  2AE6               	nop2
   488                           
   489                           ;LAB8.c: 86:             }
   490  02E6  2AEC               	goto	l1481
   491  02E7                     l1477:
   492                           
   493                           ;LAB8.c: 88:                 ADCON0bits.CHS = 1;
   494  02E7  081F               	movf	31,w	;volatile
   495  02E8  39C3               	andlw	-61
   496  02E9  3804               	iorlw	4
   497  02EA  009F               	movwf	31	;volatile
   498  02EB  2ADF               	goto	l1475
   499  02EC                     l1481:
   500                           
   501                           ;LAB8.c: 91:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   502  02EC  300F               	movlw	15
   503  02ED  1283               	bcf	3,5	;RP0=0, select bank0
   504  02EE  1303               	bcf	3,6	;RP1=0, select bank0
   505  02EF  00B2               	movwf	??_main
   506  02F0                     u587:
   507  02F0  0BB2               	decfsz	??_main,f
   508  02F1  2AF0               	goto	u587
   509  02F2  2AF3               	nop2
   510  02F3                     l1483:
   511                           
   512                           ;LAB8.c: 92:             ADCON0bits.GO = 1;
   513  02F3  1283               	bcf	3,5	;RP0=0, select bank0
   514  02F4  1303               	bcf	3,6	;RP1=0, select bank0
   515  02F5  149F               	bsf	31,1	;volatile
   516  02F6  2AD0               	goto	l1469
   517  02F7  120A  118A  2812   	ljmp	start
   518  02FA                     __end_of_main:
   519                           
   520                           	psect	text1
   521  0248                     __ptext1:	
   522 ;; *************** function _setup *****************
   523 ;; Defined at:
   524 ;;		line 98 in file "LAB8.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   538 ;;      Params:         0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0
   540 ;;      Temps:          0       1       0       0       0
   541 ;;      Totals:         0       1       0       0       0
   542 ;;Total ram usage:        1 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 3
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_main
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           
   553                           ;psect for function _setup
   554  0248                     _setup:
   555  0248                     l1395:	
   556                           ;incstack = 0
   557                           ; Regs used in _setup: [wreg+status,2+status,0]
   558                           
   559                           
   560                           ;LAB8.c: 101:     ANSEL = 0b00000011;
   561  0248  3003               	movlw	3
   562  0249  1683               	bsf	3,5	;RP0=1, select bank3
   563  024A  1703               	bsf	3,6	;RP1=1, select bank3
   564  024B  0088               	movwf	8	;volatile
   565  024C                     l1397:
   566                           
   567                           ;LAB8.c: 102:     ANSELH = 0;
   568  024C  0189               	clrf	9	;volatile
   569  024D                     l1399:
   570                           
   571                           ;LAB8.c: 104:     TRISA = 0b00000011;
   572  024D  3003               	movlw	3
   573  024E  1683               	bsf	3,5	;RP0=1, select bank1
   574  024F  1303               	bcf	3,6	;RP1=0, select bank1
   575  0250  0085               	movwf	5	;volatile
   576                           
   577                           ;LAB8.c: 105:     TRISC = 0;
   578  0251  0187               	clrf	7	;volatile
   579                           
   580                           ;LAB8.c: 106:     TRISD = 0;
   581  0252  0188               	clrf	8	;volatile
   582                           
   583                           ;LAB8.c: 107:     TRISE = 0;
   584  0253  0189               	clrf	9	;volatile
   585                           
   586                           ;LAB8.c: 109:     PORTA = 0;
   587  0254  1283               	bcf	3,5	;RP0=0, select bank0
   588  0255  1303               	bcf	3,6	;RP1=0, select bank0
   589  0256  0185               	clrf	5	;volatile
   590                           
   591                           ;LAB8.c: 110:     PORTD = 0;
   592  0257  0188               	clrf	8	;volatile
   593                           
   594                           ;LAB8.c: 111:     PORTC = 0;
   595  0258  0187               	clrf	7	;volatile
   596                           
   597                           ;LAB8.c: 112:     PORTE = 0;
   598  0259  0189               	clrf	9	;volatile
   599  025A                     l1401:
   600                           
   601                           ;LAB8.c: 115:     OSCCONbits.IRCF = 0b0110;
   602  025A  1683               	bsf	3,5	;RP0=1, select bank1
   603  025B  1303               	bcf	3,6	;RP1=0, select bank1
   604  025C  080F               	movf	15,w	;volatile
   605  025D  398F               	andlw	-113
   606  025E  3860               	iorlw	96
   607  025F  008F               	movwf	15	;volatile
   608  0260                     l1403:
   609                           
   610                           ;LAB8.c: 116:     OSCCONbits.SCS = 1;
   611  0260  140F               	bsf	15,0	;volatile
   612  0261                     l1405:
   613                           
   614                           ;LAB8.c: 119:     OPTION_REGbits.T0CS = 0;
   615  0261  1281               	bcf	1,5	;volatile
   616  0262                     l1407:
   617                           
   618                           ;LAB8.c: 120:     OPTION_REGbits.T0SE = 0;
   619  0262  1201               	bcf	1,4	;volatile
   620  0263                     l1409:
   621                           
   622                           ;LAB8.c: 121:     OPTION_REGbits.PSA = 0;
   623  0263  1181               	bcf	1,3	;volatile
   624  0264                     l1411:
   625                           
   626                           ;LAB8.c: 122:     OPTION_REGbits.PS2 = 1;
   627  0264  1501               	bsf	1,2	;volatile
   628  0265                     l1413:
   629                           
   630                           ;LAB8.c: 123:     OPTION_REGbits.PS1 = 1;
   631  0265  1481               	bsf	1,1	;volatile
   632  0266                     l1415:
   633                           
   634                           ;LAB8.c: 124:     OPTION_REGbits.PS0 = 1;
   635  0266  1401               	bsf	1,0	;volatile
   636  0267                     l1417:
   637                           
   638                           ;LAB8.c: 125:     TMR0 = 237;
   639  0267  30ED               	movlw	237
   640  0268  1283               	bcf	3,5	;RP0=0, select bank0
   641  0269  1303               	bcf	3,6	;RP1=0, select bank0
   642  026A  0081               	movwf	1	;volatile
   643  026B                     l1419:
   644                           
   645                           ;LAB8.c: 128:     ADCON1bits.ADFM = 0;
   646  026B  1683               	bsf	3,5	;RP0=1, select bank1
   647  026C  1303               	bcf	3,6	;RP1=0, select bank1
   648  026D  139F               	bcf	31,7	;volatile
   649  026E                     l1421:
   650                           
   651                           ;LAB8.c: 129:     ADCON1bits.VCFG0 = 0;
   652  026E  121F               	bcf	31,4	;volatile
   653  026F                     l1423:
   654                           
   655                           ;LAB8.c: 130:     ADCON1bits.VCFG1 = 0;
   656  026F  129F               	bcf	31,5	;volatile
   657  0270                     l1425:
   658                           
   659                           ;LAB8.c: 132:     ADCON0bits.ADCS = 0b01;
   660  0270  1283               	bcf	3,5	;RP0=0, select bank0
   661  0271  1303               	bcf	3,6	;RP1=0, select bank0
   662  0272  081F               	movf	31,w	;volatile
   663  0273  393F               	andlw	-193
   664  0274  3840               	iorlw	64
   665  0275  009F               	movwf	31	;volatile
   666  0276                     l1427:
   667                           
   668                           ;LAB8.c: 133:     ADCON0bits.CHS = 0;
   669  0276  30C3               	movlw	-61
   670  0277  059F               	andwf	31,f	;volatile
   671  0278                     l1429:
   672                           
   673                           ;LAB8.c: 134:     ADCON0bits.ADON = 1;
   674  0278  141F               	bsf	31,0	;volatile
   675  0279                     l1431:
   676                           
   677                           ;LAB8.c: 135:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   678  0279  300F               	movlw	15
   679  027A  1283               	bcf	3,5	;RP0=0, select bank0
   680  027B  1303               	bcf	3,6	;RP1=0, select bank0
   681  027C  00B1               	movwf	??_setup
   682  027D                     u597:
   683  027D  0BB1               	decfsz	??_setup,f
   684  027E  2A7D               	goto	u597
   685  027F  2A80               	nop2
   686  0280                     l1433:
   687                           
   688                           ;LAB8.c: 138:     INTCONbits.T0IF = 0;
   689  0280  110B               	bcf	11,2	;volatile
   690  0281                     l1435:
   691                           
   692                           ;LAB8.c: 139:     INTCONbits.T0IE = 1;
   693  0281  168B               	bsf	11,5	;volatile
   694  0282                     l1437:
   695                           
   696                           ;LAB8.c: 140:     INTCONbits.GIE = 1;
   697  0282  178B               	bsf	11,7	;volatile
   698  0283                     l1439:
   699                           
   700                           ;LAB8.c: 141:     PIR1bits.ADIF = 0;
   701  0283  1283               	bcf	3,5	;RP0=0, select bank0
   702  0284  1303               	bcf	3,6	;RP1=0, select bank0
   703  0285  130C               	bcf	12,6	;volatile
   704  0286                     l1441:
   705                           
   706                           ;LAB8.c: 142:     PIE1bits.ADIE = 1;
   707  0286  1683               	bsf	3,5	;RP0=1, select bank1
   708  0287  1303               	bcf	3,6	;RP1=0, select bank1
   709  0288  170C               	bsf	12,6	;volatile
   710  0289                     l1443:
   711                           
   712                           ;LAB8.c: 143:     INTCONbits.PEIE = 1;
   713  0289  170B               	bsf	11,6	;volatile
   714  028A                     l87:
   715  028A  0008               	return
   716  028B                     __end_of_setup:
   717                           
   718                           	psect	text2
   719  028B                     __ptext2:	
   720 ;; *************** function _isr *****************
   721 ;; Defined at:
   722 ;;		line 60 in file "LAB8.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       6       0       0       0
   739 ;;      Totals:         0       6       0       0       0
   740 ;;Total ram usage:        6 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; Hardware stack levels required when called: 2
   743 ;; This function calls:
   744 ;;		_displays
   745 ;;		_divisor
   746 ;;		_tmr0
   747 ;; This function is called by:
   748 ;;		Interrupt level 1
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           
   753                           ;psect for function _isr
   754  028B                     _isr:
   755  028B                     i1l1447:
   756                           
   757                           ;LAB8.c: 61:     if(PIR1bits.ADIF){
   758  028B  1F0C               	btfss	12,6	;volatile
   759  028C  2A8E               	goto	u52_21
   760  028D  2A8F               	goto	u52_20
   761  028E                     u52_21:
   762  028E  2AAD               	goto	i1l1459
   763  028F                     u52_20:
   764  028F                     i1l1449:
   765                           
   766                           ;LAB8.c: 62:         if(ADCON0bits.CHS == 1){
   767  028F  0C1F               	rrf	31,w	;volatile
   768  0290  00AB               	movwf	??_isr
   769  0291  0C2B               	rrf	??_isr,w
   770  0292  390F               	andlw	15
   771  0293  3A01               	xorlw	1
   772  0294  1D03               	skipz
   773  0295  2A97               	goto	u53_21
   774  0296  2A98               	goto	u53_20
   775  0297                     u53_21:
   776  0297  2AA8               	goto	i1l1455
   777  0298                     u53_20:
   778  0298                     i1l1451:
   779                           
   780                           ;LAB8.c: 63:             cont_vol = 2*ADRESH;
   781  0298  081E               	movf	30,w	;volatile
   782  0299  00AB               	movwf	??_isr
   783  029A  01AC               	clrf	??_isr+1
   784  029B  1003               	clrc
   785  029C  0DAB               	rlf	??_isr,f
   786  029D  0DAC               	rlf	??_isr+1,f
   787  029E  082B               	movf	??_isr,w
   788  029F  00A6               	movwf	_cont_vol
   789  02A0  082C               	movf	??_isr+1,w
   790  02A1  00A7               	movwf	_cont_vol+1
   791  02A2                     i1l1453:
   792                           
   793                           ;LAB8.c: 64:             divisor();
   794  02A2  120A  118A  21AC  120A  118A  	fcall	_divisor
   795                           
   796                           ;LAB8.c: 65:         }
   797  02A7  2AAA               	goto	i1l1457
   798  02A8                     i1l1455:
   799                           
   800                           ;LAB8.c: 67:             PORTC = ADRESH;
   801  02A8  081E               	movf	30,w	;volatile
   802  02A9  0087               	movwf	7	;volatile
   803  02AA                     i1l1457:
   804                           
   805                           ;LAB8.c: 69:         PIR1bits.ADIF = 0;
   806  02AA  1283               	bcf	3,5	;RP0=0, select bank0
   807  02AB  1303               	bcf	3,6	;RP1=0, select bank0
   808  02AC  130C               	bcf	12,6	;volatile
   809  02AD                     i1l1459:
   810                           
   811                           ;LAB8.c: 71:     if(T0IF){
   812  02AD  1D0B               	btfss	11,2	;volatile
   813  02AE  2AB0               	goto	u54_21
   814  02AF  2AB1               	goto	u54_20
   815  02B0                     u54_21:
   816  02B0  2ABB               	goto	i1l73
   817  02B1                     u54_20:
   818  02B1                     i1l1461:
   819                           
   820                           ;LAB8.c: 72:         tmr0();
   821  02B1  120A  118A  22FA  120A  118A  	fcall	_tmr0
   822  02B6                     i1l1463:
   823                           
   824                           ;LAB8.c: 73:         displays();
   825  02B6  120A  118A  21FF  120A  118A  	fcall	_displays
   826  02BB                     i1l73:
   827  02BB  1283               	bcf	3,5	;RP0=0, select bank0
   828  02BC  1303               	bcf	3,6	;RP1=0, select bank0
   829  02BD  0830               	movf	??_isr+5,w
   830  02BE  00FF               	movwf	btemp+1
   831  02BF  082F               	movf	??_isr+4,w
   832  02C0  008A               	movwf	10
   833  02C1  082E               	movf	??_isr+3,w
   834  02C2  0084               	movwf	4
   835  02C3  0E2D               	swapf	??_isr+2,w
   836  02C4  0083               	movwf	3
   837  02C5  0EFE               	swapf	btemp,f
   838  02C6  0E7E               	swapf	btemp,w
   839  02C7  0009               	retfie
   840  02C8                     __end_of_isr:
   841                           
   842                           	psect	intentry
   843  0004                     __pintentry:	
   844                           ;incstack = 0
   845                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   846                           
   847  0004                     interrupt_function:
   848  007E                     saved_w	set	btemp
   849  0004  00FE               	movwf	btemp
   850  0005  0E03               	swapf	3,w
   851  0006  1283               	bcf	3,5	;RP0=0, select bank0
   852  0007  1303               	bcf	3,6	;RP1=0, select bank0
   853  0008  00AD               	movwf	??_isr+2
   854  0009  0804               	movf	4,w
   855  000A  00AE               	movwf	??_isr+3
   856  000B  080A               	movf	10,w
   857  000C  00AF               	movwf	??_isr+4
   858  000D  087F               	movf	btemp+1,w
   859  000E  00B0               	movwf	??_isr+5
   860  000F  120A  118A  2A8B   	ljmp	_isr
   861                           
   862                           	psect	text3
   863  02FA                     __ptext3:	
   864 ;; *************** function _tmr0 *****************
   865 ;; Defined at:
   866 ;;		line 148 in file "LAB8.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0
   883 ;;      Totals:         0       0       0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used: 1
   886 ;; This function calls:
   887 ;;		Nothing
   888 ;; This function is called by:
   889 ;;		_isr
   890 ;; This function uses a non-reentrant model
   891 ;;
   892                           
   893                           
   894                           ;psect for function _tmr0
   895  02FA                     _tmr0:
   896  02FA                     i1l1369:	
   897                           ;incstack = 0
   898                           ; Regs used in _tmr0: [wreg]
   899                           
   900                           
   901                           ;LAB8.c: 149:     INTCONbits.T0IF = 0;
   902  02FA  110B               	bcf	11,2	;volatile
   903  02FB                     i1l1371:
   904                           
   905                           ;LAB8.c: 150:     TMR0 = 237;
   906  02FB  30ED               	movlw	237
   907  02FC  1283               	bcf	3,5	;RP0=0, select bank0
   908  02FD  1303               	bcf	3,6	;RP1=0, select bank0
   909  02FE  0081               	movwf	1	;volatile
   910  02FF                     i1l90:
   911  02FF  0008               	return
   912  0300                     __end_of_tmr0:
   913                           
   914                           	psect	text4
   915  01AC                     __ptext4:	
   916 ;; *************** function _divisor *****************
   917 ;; Defined at:
   918 ;;		line 154 in file "LAB8.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  i               2   12[COMMON] int 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         2       0       0       0       0
   934 ;;      Temps:          3       0       0       0       0
   935 ;;      Totals:         5       0       0       0       0
   936 ;;Total ram usage:        5 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 1
   939 ;; This function calls:
   940 ;;		___awdiv
   941 ;;		___awmod
   942 ;; This function is called by:
   943 ;;		_isr
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _divisor
   949  01AC                     _divisor:
   950  01AC                     i1l1357:	
   951                           ;incstack = 0
   952                           ; Regs used in _divisor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   953                           
   954                           
   955                           ;LAB8.c: 155:     for(int i = 0; i<3 ; i++){
   956  01AC  01FC               	clrf	divisor@i
   957  01AD  01FD               	clrf	divisor@i+1
   958  01AE                     i1l1363:
   959                           
   960                           ;LAB8.c: 156:         dig[i] = cont_vol % 10;
   961  01AE  300A               	movlw	10
   962  01AF  00F0               	movwf	___awmod@divisor
   963  01B0  3000               	movlw	0
   964  01B1  00F1               	movwf	___awmod@divisor+1
   965  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   966  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   967  01B4  0827               	movf	_cont_vol+1,w
   968  01B5  00F3               	movwf	___awmod@dividend+1
   969  01B6  0826               	movf	_cont_vol,w
   970  01B7  00F2               	movwf	___awmod@dividend
   971  01B8  120A  118A  2153  120A  118A  	fcall	___awmod
   972  01BD  087C               	movf	divisor@i,w
   973  01BE  00F9               	movwf	??_divisor
   974  01BF  0779               	addwf	??_divisor,w
   975  01C0  3E20               	addlw	(low (_dig| 0))& (0+255)
   976  01C1  0084               	movwf	4
   977  01C2  0870               	movf	?___awmod,w
   978  01C3  1383               	bcf	3,7	;select IRP bank0
   979  01C4  0080               	movwf	0
   980  01C5  0A84               	incf	4,f
   981  01C6  0871               	movf	?___awmod+1,w
   982  01C7  0080               	movwf	0
   983                           
   984                           ;LAB8.c: 157:         cont_vol = (cont_vol - dig[i])/10;
   985  01C8  300A               	movlw	10
   986  01C9  00F0               	movwf	___awdiv@divisor
   987  01CA  3000               	movlw	0
   988  01CB  00F1               	movwf	___awdiv@divisor+1
   989  01CC  087C               	movf	divisor@i,w
   990  01CD  00F9               	movwf	??_divisor
   991  01CE  0779               	addwf	??_divisor,w
   992  01CF  3E20               	addlw	(low (_dig| 0))& (0+255)
   993  01D0  0084               	movwf	4
   994  01D1  0800               	movf	0,w
   995  01D2  00FA               	movwf	??_divisor+1
   996  01D3  0A84               	incf	4,f
   997  01D4  0800               	movf	0,w
   998  01D5  00FB               	movwf	??_divisor+2
   999  01D6  087A               	movf	??_divisor+1,w
  1000  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1001  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1002  01D9  0226               	subwf	_cont_vol,w
  1003  01DA  00F2               	movwf	___awdiv@dividend
  1004  01DB  087B               	movf	??_divisor+2,w
  1005  01DC  1C03               	skipc
  1006  01DD  0A7B               	incf	??_divisor+2,w
  1007  01DE  0227               	subwf	_cont_vol+1,w
  1008  01DF  00F3               	movwf	___awdiv@dividend+1
  1009  01E0  120A  118A  202A  120A  118A  	fcall	___awdiv
  1010  01E5  0871               	movf	?___awdiv+1,w
  1011  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1012  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1013  01E8  00A7               	movwf	_cont_vol+1
  1014  01E9  0870               	movf	?___awdiv,w
  1015  01EA  00A6               	movwf	_cont_vol
  1016  01EB                     i1l1365:
  1017                           
  1018                           ;LAB8.c: 158:     }
  1019  01EB  3001               	movlw	1
  1020  01EC  07FC               	addwf	divisor@i,f
  1021  01ED  1803               	skipnc
  1022  01EE  0AFD               	incf	divisor@i+1,f
  1023  01EF  3000               	movlw	0
  1024  01F0  07FD               	addwf	divisor@i+1,f
  1025  01F1                     i1l1367:
  1026  01F1  087D               	movf	divisor@i+1,w
  1027  01F2  3A80               	xorlw	128
  1028  01F3  00FF               	movwf	btemp+1
  1029  01F4  3080               	movlw	128
  1030  01F5  027F               	subwf	btemp+1,w
  1031  01F6  1D03               	skipz
  1032  01F7  29FA               	goto	u48_25
  1033  01F8  3003               	movlw	3
  1034  01F9  027C               	subwf	divisor@i,w
  1035  01FA                     u48_25:
  1036  01FA  1C03               	skipc
  1037  01FB  29FD               	goto	u48_21
  1038  01FC  29FE               	goto	u48_20
  1039  01FD                     u48_21:
  1040  01FD  29AE               	goto	i1l1363
  1041  01FE                     u48_20:
  1042  01FE                     i1l95:
  1043  01FE  0008               	return
  1044  01FF                     __end_of_divisor:
  1045                           
  1046                           	psect	text5
  1047  0153                     __ptext5:	
  1048 ;; *************** function ___awmod *****************
  1049 ;; Defined at:
  1050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  divisor         2    0[COMMON] int 
  1053 ;;  dividend        2    2[COMMON] int 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  sign            1    6[COMMON] unsigned char 
  1056 ;;  counter         1    5[COMMON] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  2    0[COMMON] int 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         4       0       0       0       0
  1067 ;;      Locals:         2       0       0       0       0
  1068 ;;      Temps:          1       0       0       0       0
  1069 ;;      Totals:         7       0       0       0       0
  1070 ;;Total ram usage:        7 bytes
  1071 ;; Hardware stack levels used: 1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_divisor
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function ___awmod
  1081  0153                     ___awmod:
  1082  0153                     i1l1319:	
  1083                           ;incstack = 0
  1084                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1085                           
  1086  0153  01F6               	clrf	___awmod@sign
  1087  0154                     i1l1321:
  1088  0154  1FF3               	btfss	___awmod@dividend+1,7
  1089  0155  2957               	goto	u39_21
  1090  0156  2958               	goto	u39_20
  1091  0157                     u39_21:
  1092  0157  295F               	goto	i1l1327
  1093  0158                     u39_20:
  1094  0158                     i1l1323:
  1095  0158  09F2               	comf	___awmod@dividend,f
  1096  0159  09F3               	comf	___awmod@dividend+1,f
  1097  015A  0AF2               	incf	___awmod@dividend,f
  1098  015B  1903               	skipnz
  1099  015C  0AF3               	incf	___awmod@dividend+1,f
  1100  015D                     i1l1325:
  1101  015D  01F6               	clrf	___awmod@sign
  1102  015E  0AF6               	incf	___awmod@sign,f
  1103  015F                     i1l1327:
  1104  015F  1FF1               	btfss	___awmod@divisor+1,7
  1105  0160  2962               	goto	u40_21
  1106  0161  2963               	goto	u40_20
  1107  0162                     u40_21:
  1108  0162  2968               	goto	i1l1331
  1109  0163                     u40_20:
  1110  0163                     i1l1329:
  1111  0163  09F0               	comf	___awmod@divisor,f
  1112  0164  09F1               	comf	___awmod@divisor+1,f
  1113  0165  0AF0               	incf	___awmod@divisor,f
  1114  0166  1903               	skipnz
  1115  0167  0AF1               	incf	___awmod@divisor+1,f
  1116  0168                     i1l1331:
  1117  0168  0870               	movf	___awmod@divisor,w
  1118  0169  0471               	iorwf	___awmod@divisor+1,w
  1119  016A  1903               	btfsc	3,2
  1120  016B  296D               	goto	u41_21
  1121  016C  296E               	goto	u41_20
  1122  016D                     u41_21:
  1123  016D  299D               	goto	i1l1349
  1124  016E                     u41_20:
  1125  016E                     i1l1333:
  1126  016E  01F5               	clrf	___awmod@counter
  1127  016F  0AF5               	incf	___awmod@counter,f
  1128  0170  297C               	goto	i1l1339
  1129  0171                     i1l1335:
  1130  0171  3001               	movlw	1
  1131  0172                     u42_25:
  1132  0172  1003               	clrc
  1133  0173  0DF0               	rlf	___awmod@divisor,f
  1134  0174  0DF1               	rlf	___awmod@divisor+1,f
  1135  0175  3EFF               	addlw	-1
  1136  0176  1D03               	skipz
  1137  0177  2972               	goto	u42_25
  1138  0178                     i1l1337:
  1139  0178  3001               	movlw	1
  1140  0179  00F4               	movwf	??___awmod
  1141  017A  0874               	movf	??___awmod,w
  1142  017B  07F5               	addwf	___awmod@counter,f
  1143  017C                     i1l1339:
  1144  017C  1FF1               	btfss	___awmod@divisor+1,7
  1145  017D  297F               	goto	u43_21
  1146  017E  2980               	goto	u43_20
  1147  017F                     u43_21:
  1148  017F  2971               	goto	i1l1335
  1149  0180                     u43_20:
  1150  0180                     i1l1341:
  1151  0180  0871               	movf	___awmod@divisor+1,w
  1152  0181  0273               	subwf	___awmod@dividend+1,w
  1153  0182  1D03               	skipz
  1154  0183  2986               	goto	u44_25
  1155  0184  0870               	movf	___awmod@divisor,w
  1156  0185  0272               	subwf	___awmod@dividend,w
  1157  0186                     u44_25:
  1158  0186  1C03               	skipc
  1159  0187  2989               	goto	u44_21
  1160  0188  298A               	goto	u44_20
  1161  0189                     u44_21:
  1162  0189  2990               	goto	i1l1345
  1163  018A                     u44_20:
  1164  018A                     i1l1343:
  1165  018A  0870               	movf	___awmod@divisor,w
  1166  018B  02F2               	subwf	___awmod@dividend,f
  1167  018C  0871               	movf	___awmod@divisor+1,w
  1168  018D  1C03               	skipc
  1169  018E  03F3               	decf	___awmod@dividend+1,f
  1170  018F  02F3               	subwf	___awmod@dividend+1,f
  1171  0190                     i1l1345:
  1172  0190  3001               	movlw	1
  1173  0191                     u45_25:
  1174  0191  1003               	clrc
  1175  0192  0CF1               	rrf	___awmod@divisor+1,f
  1176  0193  0CF0               	rrf	___awmod@divisor,f
  1177  0194  3EFF               	addlw	-1
  1178  0195  1D03               	skipz
  1179  0196  2991               	goto	u45_25
  1180  0197                     i1l1347:
  1181  0197  3001               	movlw	1
  1182  0198  02F5               	subwf	___awmod@counter,f
  1183  0199  1D03               	btfss	3,2
  1184  019A  299C               	goto	u46_21
  1185  019B  299D               	goto	u46_20
  1186  019C                     u46_21:
  1187  019C  2980               	goto	i1l1341
  1188  019D                     u46_20:
  1189  019D                     i1l1349:
  1190  019D  0876               	movf	___awmod@sign,w
  1191  019E  1903               	btfsc	3,2
  1192  019F  29A1               	goto	u47_21
  1193  01A0  29A2               	goto	u47_20
  1194  01A1                     u47_21:
  1195  01A1  29A7               	goto	i1l1353
  1196  01A2                     u47_20:
  1197  01A2                     i1l1351:
  1198  01A2  09F2               	comf	___awmod@dividend,f
  1199  01A3  09F3               	comf	___awmod@dividend+1,f
  1200  01A4  0AF2               	incf	___awmod@dividend,f
  1201  01A5  1903               	skipnz
  1202  01A6  0AF3               	incf	___awmod@dividend+1,f
  1203  01A7                     i1l1353:
  1204  01A7  0873               	movf	___awmod@dividend+1,w
  1205  01A8  00F1               	movwf	?___awmod+1
  1206  01A9  0872               	movf	___awmod@dividend,w
  1207  01AA  00F0               	movwf	?___awmod
  1208  01AB                     i1l389:
  1209  01AB  0008               	return
  1210  01AC                     __end_of___awmod:
  1211                           
  1212                           	psect	text6
  1213  002A                     __ptext6:	
  1214 ;; *************** function ___awdiv *****************
  1215 ;; Defined at:
  1216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  divisor         2    0[COMMON] int 
  1219 ;;  dividend        2    2[COMMON] int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  quotient        2    7[COMMON] int 
  1222 ;;  sign            1    6[COMMON] unsigned char 
  1223 ;;  counter         1    5[COMMON] unsigned char 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  2    0[COMMON] int 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1233 ;;      Params:         4       0       0       0       0
  1234 ;;      Locals:         4       0       0       0       0
  1235 ;;      Temps:          1       0       0       0       0
  1236 ;;      Totals:         9       0       0       0       0
  1237 ;;Total ram usage:        9 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_divisor
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function ___awdiv
  1248  002A                     ___awdiv:
  1249  002A                     i1l1275:	
  1250                           ;incstack = 0
  1251                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1252                           
  1253  002A  01F6               	clrf	___awdiv@sign
  1254  002B                     i1l1277:
  1255  002B  1FF1               	btfss	___awdiv@divisor+1,7
  1256  002C  282E               	goto	u29_21
  1257  002D  282F               	goto	u29_20
  1258  002E                     u29_21:
  1259  002E  2836               	goto	i1l1283
  1260  002F                     u29_20:
  1261  002F                     i1l1279:
  1262  002F  09F0               	comf	___awdiv@divisor,f
  1263  0030  09F1               	comf	___awdiv@divisor+1,f
  1264  0031  0AF0               	incf	___awdiv@divisor,f
  1265  0032  1903               	skipnz
  1266  0033  0AF1               	incf	___awdiv@divisor+1,f
  1267  0034                     i1l1281:
  1268  0034  01F6               	clrf	___awdiv@sign
  1269  0035  0AF6               	incf	___awdiv@sign,f
  1270  0036                     i1l1283:
  1271  0036  1FF3               	btfss	___awdiv@dividend+1,7
  1272  0037  2839               	goto	u30_21
  1273  0038  283A               	goto	u30_20
  1274  0039                     u30_21:
  1275  0039  2843               	goto	i1l1289
  1276  003A                     u30_20:
  1277  003A                     i1l1285:
  1278  003A  09F2               	comf	___awdiv@dividend,f
  1279  003B  09F3               	comf	___awdiv@dividend+1,f
  1280  003C  0AF2               	incf	___awdiv@dividend,f
  1281  003D  1903               	skipnz
  1282  003E  0AF3               	incf	___awdiv@dividend+1,f
  1283  003F                     i1l1287:
  1284  003F  3001               	movlw	1
  1285  0040  00F4               	movwf	??___awdiv
  1286  0041  0874               	movf	??___awdiv,w
  1287  0042  06F6               	xorwf	___awdiv@sign,f
  1288  0043                     i1l1289:
  1289  0043  01F7               	clrf	___awdiv@quotient
  1290  0044  01F8               	clrf	___awdiv@quotient+1
  1291  0045                     i1l1291:
  1292  0045  0870               	movf	___awdiv@divisor,w
  1293  0046  0471               	iorwf	___awdiv@divisor+1,w
  1294  0047  1903               	btfsc	3,2
  1295  0048  284A               	goto	u31_21
  1296  0049  284B               	goto	u31_20
  1297  004A                     u31_21:
  1298  004A  2882               	goto	i1l1311
  1299  004B                     u31_20:
  1300  004B                     i1l1293:
  1301  004B  01F5               	clrf	___awdiv@counter
  1302  004C  0AF5               	incf	___awdiv@counter,f
  1303  004D  2859               	goto	i1l1299
  1304  004E                     i1l1295:
  1305  004E  3001               	movlw	1
  1306  004F                     u32_25:
  1307  004F  1003               	clrc
  1308  0050  0DF0               	rlf	___awdiv@divisor,f
  1309  0051  0DF1               	rlf	___awdiv@divisor+1,f
  1310  0052  3EFF               	addlw	-1
  1311  0053  1D03               	skipz
  1312  0054  284F               	goto	u32_25
  1313  0055                     i1l1297:
  1314  0055  3001               	movlw	1
  1315  0056  00F4               	movwf	??___awdiv
  1316  0057  0874               	movf	??___awdiv,w
  1317  0058  07F5               	addwf	___awdiv@counter,f
  1318  0059                     i1l1299:
  1319  0059  1FF1               	btfss	___awdiv@divisor+1,7
  1320  005A  285C               	goto	u33_21
  1321  005B  285D               	goto	u33_20
  1322  005C                     u33_21:
  1323  005C  284E               	goto	i1l1295
  1324  005D                     u33_20:
  1325  005D                     i1l1301:
  1326  005D  3001               	movlw	1
  1327  005E                     u34_25:
  1328  005E  1003               	clrc
  1329  005F  0DF7               	rlf	___awdiv@quotient,f
  1330  0060  0DF8               	rlf	___awdiv@quotient+1,f
  1331  0061  3EFF               	addlw	-1
  1332  0062  1D03               	skipz
  1333  0063  285E               	goto	u34_25
  1334  0064  0871               	movf	___awdiv@divisor+1,w
  1335  0065  0273               	subwf	___awdiv@dividend+1,w
  1336  0066  1D03               	skipz
  1337  0067  286A               	goto	u35_25
  1338  0068  0870               	movf	___awdiv@divisor,w
  1339  0069  0272               	subwf	___awdiv@dividend,w
  1340  006A                     u35_25:
  1341  006A  1C03               	skipc
  1342  006B  286D               	goto	u35_21
  1343  006C  286E               	goto	u35_20
  1344  006D                     u35_21:
  1345  006D  2875               	goto	i1l1307
  1346  006E                     u35_20:
  1347  006E                     i1l1303:
  1348  006E  0870               	movf	___awdiv@divisor,w
  1349  006F  02F2               	subwf	___awdiv@dividend,f
  1350  0070  0871               	movf	___awdiv@divisor+1,w
  1351  0071  1C03               	skipc
  1352  0072  03F3               	decf	___awdiv@dividend+1,f
  1353  0073  02F3               	subwf	___awdiv@dividend+1,f
  1354  0074                     i1l1305:
  1355  0074  1477               	bsf	___awdiv@quotient,0
  1356  0075                     i1l1307:
  1357  0075  3001               	movlw	1
  1358  0076                     u36_25:
  1359  0076  1003               	clrc
  1360  0077  0CF1               	rrf	___awdiv@divisor+1,f
  1361  0078  0CF0               	rrf	___awdiv@divisor,f
  1362  0079  3EFF               	addlw	-1
  1363  007A  1D03               	skipz
  1364  007B  2876               	goto	u36_25
  1365  007C                     i1l1309:
  1366  007C  3001               	movlw	1
  1367  007D  02F5               	subwf	___awdiv@counter,f
  1368  007E  1D03               	btfss	3,2
  1369  007F  2881               	goto	u37_21
  1370  0080  2882               	goto	u37_20
  1371  0081                     u37_21:
  1372  0081  285D               	goto	i1l1301
  1373  0082                     u37_20:
  1374  0082                     i1l1311:
  1375  0082  0876               	movf	___awdiv@sign,w
  1376  0083  1903               	btfsc	3,2
  1377  0084  2886               	goto	u38_21
  1378  0085  2887               	goto	u38_20
  1379  0086                     u38_21:
  1380  0086  288C               	goto	i1l1315
  1381  0087                     u38_20:
  1382  0087                     i1l1313:
  1383  0087  09F7               	comf	___awdiv@quotient,f
  1384  0088  09F8               	comf	___awdiv@quotient+1,f
  1385  0089  0AF7               	incf	___awdiv@quotient,f
  1386  008A  1903               	skipnz
  1387  008B  0AF8               	incf	___awdiv@quotient+1,f
  1388  008C                     i1l1315:
  1389  008C  0878               	movf	___awdiv@quotient+1,w
  1390  008D  00F1               	movwf	?___awdiv+1
  1391  008E  0877               	movf	___awdiv@quotient,w
  1392  008F  00F0               	movwf	?___awdiv
  1393  0090                     i1l376:
  1394  0090  0008               	return
  1395  0091                     __end_of___awdiv:
  1396                           
  1397                           	psect	text7
  1398  01FF                     __ptext7:	
  1399 ;; *************** function _displays *****************
  1400 ;; Defined at:
  1401 ;;		line 161 in file "LAB8.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          1       0       0       0       0
  1418 ;;      Totals:         1       0       0       0       0
  1419 ;;Total ram usage:        1 bytes
  1420 ;; Hardware stack levels used: 1
  1421 ;; Hardware stack levels required when called: 1
  1422 ;; This function calls:
  1423 ;;		_tabla
  1424 ;;		_tabla_p
  1425 ;; This function is called by:
  1426 ;;		_isr
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _displays
  1432  01FF                     _displays:
  1433  01FF                     i1l1375:	
  1434                           ;incstack = 0
  1435                           ; Regs used in _displays: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1436                           
  1437                           
  1438                           ;LAB8.c: 162:     PORTE = disp_selector;
  1439  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0201  0833               	movf	_disp_selector,w
  1442  0202  0089               	movwf	9	;volatile
  1443  0203                     i1l1377:
  1444                           
  1445                           ;LAB8.c: 163:     if(disp_selector == 0b001){
  1446  0203  0333               	decf	_disp_selector,w
  1447  0204  1D03               	btfss	3,2
  1448  0205  2A07               	goto	u49_21
  1449  0206  2A08               	goto	u49_20
  1450  0207                     u49_21:
  1451  0207  2A1A               	goto	i1l1383
  1452  0208                     u49_20:
  1453  0208                     i1l1379:
  1454                           
  1455                           ;LAB8.c: 164:         PORTD = tabla(dig[0]);
  1456  0208  0821               	movf	_dig+1,w
  1457  0209  00F1               	movwf	tabla@a+1
  1458  020A  0820               	movf	_dig,w
  1459  020B  00F0               	movwf	tabla@a
  1460  020C  120A  118A  20F2  120A  118A  	fcall	_tabla
  1461  0211  0870               	movf	?_tabla,w
  1462  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0214  0088               	movwf	8	;volatile
  1465  0215                     i1l1381:
  1466                           
  1467                           ;LAB8.c: 165:         disp_selector = 0b010;
  1468  0215  3002               	movlw	2
  1469  0216  00F2               	movwf	??_displays
  1470  0217  0872               	movf	??_displays,w
  1471  0218  00B3               	movwf	_disp_selector
  1472                           
  1473                           ;LAB8.c: 166:     }
  1474  0219  2A47               	goto	i1l103
  1475  021A                     i1l1383:
  1476  021A  3002               	movlw	2
  1477  021B  0633               	xorwf	_disp_selector,w
  1478  021C  1D03               	btfss	3,2
  1479  021D  2A1F               	goto	u50_21
  1480  021E  2A20               	goto	u50_20
  1481  021F                     u50_21:
  1482  021F  2A32               	goto	i1l1389
  1483  0220                     u50_20:
  1484  0220                     i1l1385:
  1485                           
  1486                           ;LAB8.c: 168:         PORTD = tabla(dig[1]);
  1487  0220  0823               	movf	_dig+3,w
  1488  0221  00F1               	movwf	tabla@a+1
  1489  0222  0822               	movf	_dig+2,w
  1490  0223  00F0               	movwf	tabla@a
  1491  0224  120A  118A  20F2  120A  118A  	fcall	_tabla
  1492  0229  0870               	movf	?_tabla,w
  1493  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1494  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1495  022C  0088               	movwf	8	;volatile
  1496  022D                     i1l1387:
  1497                           
  1498                           ;LAB8.c: 169:         disp_selector = 0b100;
  1499  022D  3004               	movlw	4
  1500  022E  00F2               	movwf	??_displays
  1501  022F  0872               	movf	??_displays,w
  1502  0230  00B3               	movwf	_disp_selector
  1503                           
  1504                           ;LAB8.c: 170:     }
  1505  0231  2A47               	goto	i1l103
  1506  0232                     i1l1389:
  1507  0232  3004               	movlw	4
  1508  0233  0633               	xorwf	_disp_selector,w
  1509  0234  1D03               	btfss	3,2
  1510  0235  2A37               	goto	u51_21
  1511  0236  2A38               	goto	u51_20
  1512  0237                     u51_21:
  1513  0237  2A47               	goto	i1l103
  1514  0238                     u51_20:
  1515  0238                     i1l1391:
  1516                           
  1517                           ;LAB8.c: 172:         PORTD = tabla_p(dig[2]);
  1518  0238  0825               	movf	_dig+5,w
  1519  0239  00F1               	movwf	tabla_p@a+1
  1520  023A  0824               	movf	_dig+4,w
  1521  023B  00F0               	movwf	tabla_p@a
  1522  023C  120A  118A  2091  120A  118A  	fcall	_tabla_p
  1523  0241  0870               	movf	?_tabla_p,w
  1524  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0244  0088               	movwf	8	;volatile
  1527  0245                     i1l1393:
  1528                           
  1529                           ;LAB8.c: 173:         disp_selector = 0b001;
  1530  0245  01B3               	clrf	_disp_selector
  1531  0246  0AB3               	incf	_disp_selector,f
  1532  0247                     i1l103:
  1533  0247  0008               	return
  1534  0248                     __end_of_displays:
  1535                           
  1536                           	psect	text8
  1537  0091                     __ptext8:	
  1538 ;; *************** function _tabla_p *****************
  1539 ;; Defined at:
  1540 ;;		line 217 in file "LAB8.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  a               2    0[COMMON] int 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;		None
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  2    0[COMMON] int 
  1547 ;; Registers used:
  1548 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1554 ;;      Params:         2       0       0       0       0
  1555 ;;      Locals:         0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0
  1557 ;;      Totals:         2       0       0       0       0
  1558 ;;Total ram usage:        2 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_displays
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _tabla_p
  1569  0091                     _tabla_p:
  1570  0091                     i1l1201:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _tabla_p: [wreg-fsr0h+status,2+status,0]
  1573                           
  1574                           
  1575                           ;LAB8.c: 218:     switch (a){
  1576  0091  28C9               	goto	i1l1269
  1577  0092                     i1l1203:
  1578                           
  1579                           ;LAB8.c: 220:             return 0b10111111;
  1580  0092  30BF               	movlw	191
  1581  0093  00F0               	movwf	?_tabla_p
  1582  0094  3000               	movlw	0
  1583  0095  00F1               	movwf	?_tabla_p+1
  1584  0096  28F1               	goto	i1l125
  1585  0097                     i1l1209:
  1586                           
  1587                           ;LAB8.c: 223:             return 0b10000110;
  1588  0097  3086               	movlw	134
  1589  0098  00F0               	movwf	?_tabla_p
  1590  0099  3000               	movlw	0
  1591  009A  00F1               	movwf	?_tabla_p+1
  1592  009B  28F1               	goto	i1l125
  1593  009C                     i1l1215:
  1594                           
  1595                           ;LAB8.c: 226:             return 0b11011011;
  1596  009C  30DB               	movlw	219
  1597  009D  00F0               	movwf	?_tabla_p
  1598  009E  3000               	movlw	0
  1599  009F  00F1               	movwf	?_tabla_p+1
  1600  00A0  28F1               	goto	i1l125
  1601  00A1                     i1l1221:
  1602                           
  1603                           ;LAB8.c: 229:             return 0b11001111;
  1604  00A1  30CF               	movlw	207
  1605  00A2  00F0               	movwf	?_tabla_p
  1606  00A3  3000               	movlw	0
  1607  00A4  00F1               	movwf	?_tabla_p+1
  1608  00A5  28F1               	goto	i1l125
  1609  00A6                     i1l1227:
  1610                           
  1611                           ;LAB8.c: 232:             return 0b11100110;
  1612  00A6  30E6               	movlw	230
  1613  00A7  00F0               	movwf	?_tabla_p
  1614  00A8  3000               	movlw	0
  1615  00A9  00F1               	movwf	?_tabla_p+1
  1616  00AA  28F1               	goto	i1l125
  1617  00AB                     i1l1233:
  1618                           
  1619                           ;LAB8.c: 235:             return 0b11101101;
  1620  00AB  30ED               	movlw	237
  1621  00AC  00F0               	movwf	?_tabla_p
  1622  00AD  3000               	movlw	0
  1623  00AE  00F1               	movwf	?_tabla_p+1
  1624  00AF  28F1               	goto	i1l125
  1625  00B0                     i1l1239:
  1626                           
  1627                           ;LAB8.c: 238:             return 0b11111101;
  1628  00B0  30FD               	movlw	253
  1629  00B1  00F0               	movwf	?_tabla_p
  1630  00B2  3000               	movlw	0
  1631  00B3  00F1               	movwf	?_tabla_p+1
  1632  00B4  28F1               	goto	i1l125
  1633  00B5                     i1l1245:
  1634                           
  1635                           ;LAB8.c: 241:             return 0b10000111;
  1636  00B5  3087               	movlw	135
  1637  00B6  00F0               	movwf	?_tabla_p
  1638  00B7  3000               	movlw	0
  1639  00B8  00F1               	movwf	?_tabla_p+1
  1640  00B9  28F1               	goto	i1l125
  1641  00BA                     i1l1251:
  1642                           
  1643                           ;LAB8.c: 244:             return 0b11111111;
  1644  00BA  30FF               	movlw	255
  1645  00BB  00F0               	movwf	?_tabla_p
  1646  00BC  3000               	movlw	0
  1647  00BD  00F1               	movwf	?_tabla_p+1
  1648  00BE  28F1               	goto	i1l125
  1649  00BF                     i1l1257:
  1650                           
  1651                           ;LAB8.c: 247:             return 0b11101111;
  1652  00BF  30EF               	movlw	239
  1653  00C0  00F0               	movwf	?_tabla_p
  1654  00C1  3000               	movlw	0
  1655  00C2  00F1               	movwf	?_tabla_p+1
  1656  00C3  28F1               	goto	i1l125
  1657  00C4                     i1l1263:
  1658                           
  1659                           ;LAB8.c: 250:             return 0b11111011;
  1660  00C4  30FB               	movlw	251
  1661  00C5  00F0               	movwf	?_tabla_p
  1662  00C6  3000               	movlw	0
  1663  00C7  00F1               	movwf	?_tabla_p+1
  1664  00C8  28F1               	goto	i1l125
  1665  00C9                     i1l1269:
  1666                           
  1667                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1668                           ; Switch size 1, requested type "simple"
  1669                           ; Number of cases is 1, Range of values is 0 to 0
  1670                           ; switch strategies available:
  1671                           ; Name         Instructions Cycles
  1672                           ; simple_byte            4     3 (average)
  1673                           ; direct_byte           11     8 (fixed)
  1674                           ; jumptable            260     6 (fixed)
  1675                           ;	Chosen strategy is simple_byte
  1676  00C9  0871               	movf	tabla_p@a+1,w
  1677  00CA  3A00               	xorlw	0	; case 0
  1678  00CB  1903               	skipnz
  1679  00CC  28CE               	goto	i1l1525
  1680  00CD  28F1               	goto	i1l125
  1681  00CE                     i1l1525:
  1682                           
  1683                           ; Switch size 1, requested type "simple"
  1684                           ; Number of cases is 11, Range of values is 0 to 10
  1685                           ; switch strategies available:
  1686                           ; Name         Instructions Cycles
  1687                           ; simple_byte           34    18 (average)
  1688                           ; direct_byte           41     8 (fixed)
  1689                           ; jumptable            260     6 (fixed)
  1690                           ;	Chosen strategy is simple_byte
  1691  00CE  0870               	movf	tabla_p@a,w
  1692  00CF  3A00               	xorlw	0	; case 0
  1693  00D0  1903               	skipnz
  1694  00D1  2892               	goto	i1l1203
  1695  00D2  3A01               	xorlw	1	; case 1
  1696  00D3  1903               	skipnz
  1697  00D4  2897               	goto	i1l1209
  1698  00D5  3A03               	xorlw	3	; case 2
  1699  00D6  1903               	skipnz
  1700  00D7  289C               	goto	i1l1215
  1701  00D8  3A01               	xorlw	1	; case 3
  1702  00D9  1903               	skipnz
  1703  00DA  28A1               	goto	i1l1221
  1704  00DB  3A07               	xorlw	7	; case 4
  1705  00DC  1903               	skipnz
  1706  00DD  28A6               	goto	i1l1227
  1707  00DE  3A01               	xorlw	1	; case 5
  1708  00DF  1903               	skipnz
  1709  00E0  28AB               	goto	i1l1233
  1710  00E1  3A03               	xorlw	3	; case 6
  1711  00E2  1903               	skipnz
  1712  00E3  28B0               	goto	i1l1239
  1713  00E4  3A01               	xorlw	1	; case 7
  1714  00E5  1903               	skipnz
  1715  00E6  28B5               	goto	i1l1245
  1716  00E7  3A0F               	xorlw	15	; case 8
  1717  00E8  1903               	skipnz
  1718  00E9  28BA               	goto	i1l1251
  1719  00EA  3A01               	xorlw	1	; case 9
  1720  00EB  1903               	skipnz
  1721  00EC  28BF               	goto	i1l1257
  1722  00ED  3A03               	xorlw	3	; case 10
  1723  00EE  1903               	skipnz
  1724  00EF  28C4               	goto	i1l1263
  1725  00F0  28F1               	goto	i1l125
  1726  00F1                     i1l125:
  1727  00F1  0008               	return
  1728  00F2                     __end_of_tabla_p:
  1729                           
  1730                           	psect	text9
  1731  00F2                     __ptext9:	
  1732 ;; *************** function _tabla *****************
  1733 ;; Defined at:
  1734 ;;		line 177 in file "LAB8.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  a               2    0[COMMON] int 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  2    0[COMMON] int 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1748 ;;      Params:         2       0       0       0       0
  1749 ;;      Locals:         0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0
  1751 ;;      Totals:         2       0       0       0       0
  1752 ;;Total ram usage:        2 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_displays
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _tabla
  1763  00F2                     _tabla:
  1764  00F2                     i1l1127:	
  1765                           ;incstack = 0
  1766                           ; Regs used in _tabla: [wreg-fsr0h+status,2+status,0]
  1767                           
  1768                           
  1769                           ;LAB8.c: 178:     switch (a){
  1770  00F2  292A               	goto	i1l1195
  1771  00F3                     i1l1129:
  1772                           
  1773                           ;LAB8.c: 180:             return 0b00111111;
  1774  00F3  303F               	movlw	63
  1775  00F4  00F0               	movwf	?_tabla
  1776  00F5  3000               	movlw	0
  1777  00F6  00F1               	movwf	?_tabla+1
  1778  00F7  2952               	goto	i1l108
  1779  00F8                     i1l1135:
  1780                           
  1781                           ;LAB8.c: 183:             return 0b00000110;
  1782  00F8  3006               	movlw	6
  1783  00F9  00F0               	movwf	?_tabla
  1784  00FA  3000               	movlw	0
  1785  00FB  00F1               	movwf	?_tabla+1
  1786  00FC  2952               	goto	i1l108
  1787  00FD                     i1l1141:
  1788                           
  1789                           ;LAB8.c: 186:             return 0b01011011;
  1790  00FD  305B               	movlw	91
  1791  00FE  00F0               	movwf	?_tabla
  1792  00FF  3000               	movlw	0
  1793  0100  00F1               	movwf	?_tabla+1
  1794  0101  2952               	goto	i1l108
  1795  0102                     i1l1147:
  1796                           
  1797                           ;LAB8.c: 189:             return 0b01001111;
  1798  0102  304F               	movlw	79
  1799  0103  00F0               	movwf	?_tabla
  1800  0104  3000               	movlw	0
  1801  0105  00F1               	movwf	?_tabla+1
  1802  0106  2952               	goto	i1l108
  1803  0107                     i1l1153:
  1804                           
  1805                           ;LAB8.c: 192:             return 0b01100110;
  1806  0107  3066               	movlw	102
  1807  0108  00F0               	movwf	?_tabla
  1808  0109  3000               	movlw	0
  1809  010A  00F1               	movwf	?_tabla+1
  1810  010B  2952               	goto	i1l108
  1811  010C                     i1l1159:
  1812                           
  1813                           ;LAB8.c: 195:             return 0b01101101;
  1814  010C  306D               	movlw	109
  1815  010D  00F0               	movwf	?_tabla
  1816  010E  3000               	movlw	0
  1817  010F  00F1               	movwf	?_tabla+1
  1818  0110  2952               	goto	i1l108
  1819  0111                     i1l1165:
  1820                           
  1821                           ;LAB8.c: 198:             return 0b01111101;
  1822  0111  307D               	movlw	125
  1823  0112  00F0               	movwf	?_tabla
  1824  0113  3000               	movlw	0
  1825  0114  00F1               	movwf	?_tabla+1
  1826  0115  2952               	goto	i1l108
  1827  0116                     i1l1171:
  1828                           
  1829                           ;LAB8.c: 201:             return 0b00000111;
  1830  0116  3007               	movlw	7
  1831  0117  00F0               	movwf	?_tabla
  1832  0118  3000               	movlw	0
  1833  0119  00F1               	movwf	?_tabla+1
  1834  011A  2952               	goto	i1l108
  1835  011B                     i1l1177:
  1836                           
  1837                           ;LAB8.c: 204:             return 0b01111111;
  1838  011B  307F               	movlw	127
  1839  011C  00F0               	movwf	?_tabla
  1840  011D  3000               	movlw	0
  1841  011E  00F1               	movwf	?_tabla+1
  1842  011F  2952               	goto	i1l108
  1843  0120                     i1l1183:
  1844                           
  1845                           ;LAB8.c: 207:             return 0b01101111;
  1846  0120  306F               	movlw	111
  1847  0121  00F0               	movwf	?_tabla
  1848  0122  3000               	movlw	0
  1849  0123  00F1               	movwf	?_tabla+1
  1850  0124  2952               	goto	i1l108
  1851  0125                     i1l1189:
  1852                           
  1853                           ;LAB8.c: 210:             return 0b01111011;
  1854  0125  307B               	movlw	123
  1855  0126  00F0               	movwf	?_tabla
  1856  0127  3000               	movlw	0
  1857  0128  00F1               	movwf	?_tabla+1
  1858  0129  2952               	goto	i1l108
  1859  012A                     i1l1195:
  1860                           
  1861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1862                           ; Switch size 1, requested type "simple"
  1863                           ; Number of cases is 1, Range of values is 0 to 0
  1864                           ; switch strategies available:
  1865                           ; Name         Instructions Cycles
  1866                           ; simple_byte            4     3 (average)
  1867                           ; direct_byte           11     8 (fixed)
  1868                           ; jumptable            260     6 (fixed)
  1869                           ;	Chosen strategy is simple_byte
  1870  012A  0871               	movf	tabla@a+1,w
  1871  012B  3A00               	xorlw	0	; case 0
  1872  012C  1903               	skipnz
  1873  012D  292F               	goto	i1l1527
  1874  012E  2952               	goto	i1l108
  1875  012F                     i1l1527:
  1876                           
  1877                           ; Switch size 1, requested type "simple"
  1878                           ; Number of cases is 11, Range of values is 0 to 10
  1879                           ; switch strategies available:
  1880                           ; Name         Instructions Cycles
  1881                           ; simple_byte           34    18 (average)
  1882                           ; direct_byte           41     8 (fixed)
  1883                           ; jumptable            260     6 (fixed)
  1884                           ;	Chosen strategy is simple_byte
  1885  012F  0870               	movf	tabla@a,w
  1886  0130  3A00               	xorlw	0	; case 0
  1887  0131  1903               	skipnz
  1888  0132  28F3               	goto	i1l1129
  1889  0133  3A01               	xorlw	1	; case 1
  1890  0134  1903               	skipnz
  1891  0135  28F8               	goto	i1l1135
  1892  0136  3A03               	xorlw	3	; case 2
  1893  0137  1903               	skipnz
  1894  0138  28FD               	goto	i1l1141
  1895  0139  3A01               	xorlw	1	; case 3
  1896  013A  1903               	skipnz
  1897  013B  2902               	goto	i1l1147
  1898  013C  3A07               	xorlw	7	; case 4
  1899  013D  1903               	skipnz
  1900  013E  2907               	goto	i1l1153
  1901  013F  3A01               	xorlw	1	; case 5
  1902  0140  1903               	skipnz
  1903  0141  290C               	goto	i1l1159
  1904  0142  3A03               	xorlw	3	; case 6
  1905  0143  1903               	skipnz
  1906  0144  2911               	goto	i1l1165
  1907  0145  3A01               	xorlw	1	; case 7
  1908  0146  1903               	skipnz
  1909  0147  2916               	goto	i1l1171
  1910  0148  3A0F               	xorlw	15	; case 8
  1911  0149  1903               	skipnz
  1912  014A  291B               	goto	i1l1177
  1913  014B  3A01               	xorlw	1	; case 9
  1914  014C  1903               	skipnz
  1915  014D  2920               	goto	i1l1183
  1916  014E  3A03               	xorlw	3	; case 10
  1917  014F  1903               	skipnz
  1918  0150  2925               	goto	i1l1189
  1919  0151  2952               	goto	i1l108
  1920  0152                     i1l108:
  1921  0152  0008               	return
  1922  0153                     __end_of_tabla:
  1923  007E                     btemp	set	126	;btemp
  1924  007E                     wtemp0	set	126
  1925                           
  1926                           	psect	config
  1927                           
  1928                           ;Config register CONFIG1 @ 0x2007
  1929                           ;	Oscillator Selection bits
  1930                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1931                           ;	Watchdog Timer Enable bit
  1932                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1933                           ;	Power-up Timer Enable bit
  1934                           ;	PWRTE = OFF, PWRT disabled
  1935                           ;	RE3/MCLR pin function select bit
  1936                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1937                           ;	Code Protection bit
  1938                           ;	CP = OFF, Program memory code protection is disabled
  1939                           ;	Data Code Protection bit
  1940                           ;	CPD = OFF, Data memory code protection is disabled
  1941                           ;	Brown Out Reset Selection bits
  1942                           ;	BOREN = OFF, BOR disabled
  1943                           ;	Internal External Switchover bit
  1944                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1945                           ;	Fail-Safe Clock Monitor Enabled bit
  1946                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1947                           ;	Low Voltage Programming Enable bit
  1948                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1949                           ;	In-Circuit Debugger Mode bit
  1950                           ;	DEBUG = 0x1, unprogrammed default
  1951  2007                     	org	8199
  1952  2007  20D4               	dw	8404
  1953                           
  1954                           ;Config register CONFIG2 @ 0x2008
  1955                           ;	Brown-out Reset Selection bit
  1956                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1957                           ;	Flash Program Memory Self Write Enable bits
  1958                           ;	WRT = OFF, Write protection off
  1959  2008                     	org	8200
  1960  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      8      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_divisor
    _divisor->___awdiv
    _displays->_tabla
    _displays->_tabla_p

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              7 BANK0      1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1262
                                              0 BANK0      6     6      0
                           _displays
                            _divisor
                               _tmr0
 ---------------------------------------------------------------------------------
 (3) _tmr0                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _divisor                                              5     5      0     990
                                              9 COMMON     5     5      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _displays                                             1     1      0     272
                                              2 COMMON     1     1      0
                              _tabla
                            _tabla_p
 ---------------------------------------------------------------------------------
 (4) _tabla_p                                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _tabla                                                2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _displays
     _tabla
     _tabla_p
   _divisor
     ___awdiv
     ___awmod
   _tmr0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Oct 07 07:10:54 2021

                     l87 028A             ___awdiv@sign 0076                      u550 02D4  
                    u551 02D3                      u560 02DD                      u561 02DC  
                    u577 02E3                      u587 02F0                      u597 027D  
                    _dig 0020                      _isr 028B                      fsr0 0004  
                    indf 0000             ___awmod@sign 0076                     l1401 025A  
                   l1411 0264                     l1403 0260                     l1421 026E  
                   l1413 0265                     l1405 0261                     l1431 0279  
                   l1423 026F                     l1415 0266                     l1407 0262  
                   l1441 0286                     l1433 0280                     l1425 0270  
                   l1417 0267                     l1409 0263                     l1443 0289  
                   l1435 0281                     l1427 0276                     l1419 026B  
                   l1437 0282                     l1429 0278                     l1439 0283  
                   l1471 02D4                     l1481 02EC                     l1473 02DD  
                   l1465 02C8                     l1395 0248                     l1483 02F3  
                   l1475 02DF                     l1467 02CD                     l1397 024C  
                   l1477 02E7                     l1469 02D0                     l1399 024D  
                   ?_isr 0070                     _T0IF 005A                     i1l73 02BB  
                   i1l90 02FF                     i1l95 01FE                     _TMR0 0001  
                   _digi 002A                     _main 02C8                     _tmr0 02FA  
                   btemp 007E                     start 0012                    ??_isr 002B  
                  ?_main 0070          __end_of___awdiv 0091                    ?_tmr0 0070  
        __end_of___awmod 01AC                    _ANSEL 0188          ___awdiv@divisor 0070  
                  i1l103 0247                    i1l108 0152                    i1l125 00F1  
                  i1l376 0090                    i1l389 01AB          ___awdiv@counter 0075  
                  u30_20 003A                    u30_21 0039                    u31_20 004B  
                  u31_21 004A                    u40_20 0163                    u40_21 0162  
                  u32_25 004F                    u33_20 005D                    u41_20 016E  
                  u33_21 005C                    u41_21 016D                    u50_20 0220  
                  u50_21 021F                    u34_25 005E                    u42_25 0172  
                  u51_20 0238                    u35_20 006E                    u43_20 0180  
                  u51_21 0237                    u35_21 006D                    u43_21 017F  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  u35_25 006A                    _PORTE 0009                    u44_20 018A  
                  u52_20 028F                    u44_21 0189                    u52_21 028E  
                  u36_25 0076                    u44_25 0186                    u37_20 0082  
                  u29_20 002F                    u53_20 0298                    u37_21 0081  
                  u29_21 002E                    u53_21 0297                    u45_25 0191  
                  u38_20 0087                    u46_20 019D                    u54_20 02B1  
                  u38_21 0086                    u46_21 019C                    u54_21 02B0  
                  u47_20 01A2                    u39_20 0158                    u47_21 01A1  
                  u39_21 0157                    u48_20 01FE                    u48_21 01FD  
                  u48_25 01FA                    u49_20 0208                    u49_21 0207  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089          __end_of_divisor 01FF                    _cont2 0028  
                  _tabla 00F2          __end_of_tabla_p 00F2                    _setup 0248  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015             __end_of_main 02FA             __end_of_tmr0 0300  
                 ??_main 0032                   ??_tmr0 0070                   ?_tabla 0070  
                 _ADRESH 001E         ___awdiv@dividend 0072                   ?_setup 0070  
                 _ANSELH 0189                   i1l1201 0091                   i1l1203 0092  
                 i1l1141 00FD                   i1l1221 00A1                   i1l1301 005D  
                 i1l1135 00F8                   i1l1127 00F2                   i1l1215 009C  
                 i1l1303 006E                   i1l1311 0082                   i1l1153 0107  
                 i1l1129 00F3                   i1l1233 00AB                   i1l1209 0097  
                 i1l1313 0087                   i1l1305 0074                   i1l1321 0154  
                 i1l1171 0116                   i1l1147 0102                   i1l1251 00BA  
                 i1l1227 00A6                   i1l1315 008C                   i1l1307 0075  
                 i1l1331 0168                   i1l1323 0158                   i1l1165 0111  
                 i1l1245 00B5                   i1l1309 007C                   i1l1341 0180  
                 i1l1333 016E                   i1l1325 015D                   i1l1183 0120  
                 i1l1159 010C                   i1l1263 00C4                   i1l1239 00B0  
                 i1l1351 01A2                   i1l1343 018A                   i1l1335 0171  
                 i1l1327 015F                   i1l1319 0153                   i1l1177 011B  
                 i1l1257 00BF                   i1l1281 0034                   i1l1353 01A7  
                 i1l1345 0190                   i1l1337 0178                   i1l1329 0163  
                 i1l1195 012A                   i1l1291 0045                   i1l1283 0036  
                 i1l1275 002A                   i1l1347 0197                   i1l1339 017C  
                 i1l1363 01AE                   i1l1371 02FB                   i1l1451 0298  
                 i1l1189 0125                   i1l1525 00CE                   i1l1269 00C9  
                 i1l1381 0215                   i1l1293 004B                   i1l1285 003A  
                 i1l1277 002B                   i1l1349 019D                   i1l1365 01EB  
                 i1l1357 01AC                   i1l1461 02B1                   i1l1453 02A2  
                 i1l1527 012F                   i1l1391 0238                   i1l1383 021A  
                 i1l1375 01FF                   i1l1295 004E                   i1l1287 003F  
                 i1l1279 002F                   i1l1367 01F1                   i1l1463 02B6  
                 i1l1455 02A8                   i1l1447 028B                   i1l1393 0245  
                 i1l1385 0220                   i1l1377 0203                   i1l1297 0055  
                 i1l1289 0043                   i1l1369 02FA                   i1l1457 02AA  
                 i1l1449 028F                   i1l1387 022D                   i1l1379 0208  
                 i1l1299 0059                   i1l1459 02AD                   i1l1389 0232  
       __end_of_displays 0248                ??___awdiv 0074                ??___awmod 0074  
       ___awdiv@quotient 0077          ___awmod@divisor 0070          ___awmod@counter 0075  
              ??_divisor 0079                   tabla@a 0070                ??_tabla_p 0072  
                 saved_w 007E  __end_of__initialization 0026           __pcstackCOMMON 0070  
           __pidataBANK0 0300            __end_of_tabla 0153            __end_of_setup 028B  
         _OPTION_REGbits 0081                  ??_tabla 0072                  ??_setup 0031  
             __pbssBANK0 0020               __pmaintext 02C8               __pintentry 0004  
              ?_displays 0070                  ___awdiv 002A                  ___awmod 0153  
                __ptext1 0248                  __ptext2 028B                  __ptext3 02FA  
                __ptext4 01AC                  __ptext5 0153                  __ptext6 002A  
                __ptext7 01FF                  __ptext8 0091                  __ptext9 00F2  
                _divisor 01AC             __size_of_isr 003D                  _tabla_p 0091  
       ___awmod@dividend 0072               ??_displays 0072     end_of_initialization 0026  
    start_initialization 0015              __end_of_isr 02C8              __pdataBANK0 0033  
              ___latbits 0002            __pcstackBANK0 002B        __size_of_displays 0049  
               ?___awdiv 0070                 ?___awmod 0070                 ?_divisor 0070  
               ?_tabla_p 0070           __size_of_tabla 0061           __size_of_setup 0043  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of___awdiv 0067  
       __size_of___awmod 0059         __size_of_divisor 0053         __size_of_tabla_p 0061  
               _displays 01FF                 _cont_vol 0026            __size_of_main 0032  
          __size_of_tmr0 0006                 divisor@i 007C               _INTCONbits 000B  
               tabla_p@a 0070                 intlevel1 0000               _OSCCONbits 008F  
          _disp_selector 0033  
